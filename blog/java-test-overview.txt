1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
f:I[6213,[],"OutletBoundary"]
11:I[6213,[],"MetadataBoundary"]
13:I[6213,[],"ViewportBoundary"]
15:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","java-test-overview"],"i":false,"f":[[["",{"children":["blog",{"children":["(2021-09)",{"children":["java-test-overview",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2021-09)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["java-test-overview",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children","java-test-overview","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Java 測試簡介"}],"\n",["$","h2",null,{"children":"1.1 Development 既方式"}],"\n",["$","p",null,{"children":"Development 離不開做 testing 去保證 production code 既執行結果符合期望。Development 既同時做埋 automated testing 既方式有以下兩種："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"方式名稱"}],["$","th",null,{"children":"描述"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"Test-driven development（TDD）"}],["$","td",null,{"children":"最 ideal 既做法係先寫 test code，寫曬我地期望既 given-when-then，因為有 production code 未寫而導致有 compilation error（例如 method 不存在）先再去寫 production code，當 production code 足以解決 compilation error 就再完成埋個 unit test case，直到個 unit test 行到（正常會係 fail 左）而且又冇 compilation error，再去寫埋啲 production code 既 implementation，寫完果陣應該個 unit test 就會 pass。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Behavior-driven development（BDD）"}],["$","td",null,{"children":"以 end user 既 user journey 既角度去諗 test case scenarios，來源可以係黎自 functional specs 或者 business analysts 得出既 user requirements，而寫出黎既 test code 都會同一般 TDD 所針對單個 class 既 method 去寫既 test code 有明顯分別。"}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.2 Unit test case 既表達形式"}],"\n",["$","p",null,{"children":"一般既 unit test case 寫法："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public void test() {\r\n    // Given - 喺呢個 context 下…\r\n    // 構建 context，為 dependencies 作出一啲合理假設（mocking）\r\n\r\n    // When - 當我地執行呢個 method…\r\n    // 執行需要測試既 method\r\n\r\n    // Then - 咁我地期望得到…\r\n    // 有結果既話，驗證結果係咪符合期望；void return 既話，驗證下有冇出 exception\r\n    // 亦可以驗證下某一啲 objects 既 methods 應該曾經被 call\r\n}\n"}]}],"\n",["$","p",null,{"children":"JUnit 例子："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Test\r\npublic void test_happy_calculateSine_degMode() {\r\n\r\n    // given\r\n    Calculator calculator = new Calculator(Mode.DEG);\r\n\r\n    // when\r\n    double result = calculator.calculateSine(90);\r\n\r\n    // then\r\n    Assert.assertTrue(\"Sine result under DEG mode should be correct\",\r\n                      result == 1);\r\n}\r\n\r\n@Test\r\npublic void test_happy_calculateSine_radMode() {\r\n\r\n    // given\r\n    Calculator calculator = new Calculator(Mode.RAD);\r\n\r\n    // when\r\n    double result = calculator.calculateSine(90);\r\n\r\n    // then\r\n    Assert.assertTrue(\"Sine result under RAD mode should be correct\",\r\n                      result > 0.8939 && result < 0.894);\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.3 Libraries"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"名稱"}],["$","th",null,{"children":"功能"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"JUnit、TestNG"}],["$","td",null,{"children":"提供 API 畀我地執行 assertion statements，咁我地就可以利用佢去做 TDD（test-driven development）。如果 expected value 同 actual value 兩者唔 match 就會令個 unit test fail，IDE 裡面既 plugin 會顯示紅燈；如果 match 既話就會顯示綠燈黎表示通過。Build tools 包括 Maven（Maven Surefire plugin 以及 Maven Failsafe plugin）、Gradle 會喺各自 build artifact 既 goal 執行果陣先自動執行 unit tests 甚或 integration tests。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Mockito"}],["$","td",null,{"children":["提供 API 畀我地 mock 一啲 dependency objects 既 public instance methods 所返回既 return values，咁我地就可以專注 test 一個 class 既 business logic。Mockito ",["$","code",null,{"children":"3.4.0"}]," 之前既版本未能夠 mock static methods（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP）。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"PowerMock"}],["$","td",null,{"children":["係一個基於 Mockito 既 library，佢提供 API 畀我地 mock 埋 static methods 既 return values（雖然需要咁樣做可能象徵住有 code smell，因為要咁做唔係幾 OOP），呢一點 Mockito ",["$","code",null,{"children":"3.4.0"}]," 之前係做唔到。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"WireMock"}],["$","td",null,{"children":"提供 API 畀我地建立 runtime mock servers 黎 mock external web services 既 HTTP responses。呢個比較係 end-to-end 多過 unit testing。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Cucumber"}],["$","td",null,{"children":"提供 API 畀我地做 behavior-driven 既 testing，咁我地就可以利用佢去做 BDD（behavior-driven development）。佢支持以文字去描述 given-when-then 既表達形式。呢個比較係 end-to-end 多過 unit testing。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"PITest"}],["$","td",null,{"children":["呢一個 mutation testing library 會自動 analyze source code，知道啲 if-else conditions 用咩 values 可以令到個 condition 成立，從而透過修改我地 source code 裡面既一啲 operators 之類（例如將 ",["$","code",null,{"children":"=="}]," 改成 ",["$","code",null,{"children":"!="}],"）去睇下我地既 unit tests 有冇因為佢 library 做既 code changes 而影響左結果——即係有冇 test failures。如果冇 test fail 到既話就算係唔正常，因為如果我地改左 code 但係所有 unit tests 都照 pass，咁就即係我地既 unit test coverage 唔足以 cover 曬所有 conditions。"]}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.4 其他輔助 libraries"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"名稱"}],["$","th",null,{"children":"功能"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"JSONAssert"}],["$","td",null,{"children":"呢個 library 係 Jackson Databind 既一個 alternative，可以根據內容黎 compare JSON strings，而唔係當一般 strings 咁 compare character by character。佢提供左幾個 predefined 既容忍模式。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"PODAM"}],["$","td",null,{"children":"POJO Data Mocker 係一個可以為任何 Java POJO class 生成假數據既 library。有啲時候我地想要一個 entity／DO／DTO／VO／POJO class 既 object 裡面既所有 instance fields 都有隨機既數據，呢個 library 就非常簡單易用。"}]]}]]}]]}],"\n",["$","h3",null,{"children":"1.4.1 使用 JSONAssert"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"JSONCompareMode"}],"（容忍模式）："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"LENIENT"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得"}],"\n",["$","li",null,{"children":"Non-strict array ordering：唔理 array 順序"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"NON_EXTENSIBLE"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容"}],"\n",["$","li",null,{"children":"Non-strict array ordering：唔理 array 順序"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"STRICT_ORDER"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Extensible：actual JSON 可以包含比 expected JSON 多既內容，只要唔少過就得"}],"\n",["$","li",null,{"children":"Strict ordering：會睇埋 array 順序"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"STRICT"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Non-extensible：actual JSON 唔可以包含比 expected JSON 多既內容"}],"\n",["$","li",null,{"children":"Strict ordering：會睇埋 array 順序"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"註：JSON objects 既 property 次序一定係冇關係。"}],"\n",["$","h4",null,{"children":"1.4.1.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependency>\r\n\t<groupId>org.skyscreamer</groupId>\r\n\t<artifactId>jsonassert</artifactId>\r\n\t<version>1.4.0</version>\r\n</dependency>\n"}]}],"\n",["$","h4",null,{"children":"1.4.1.2 準備 JSON 檔"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"expected.json"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\r\n\t\"arr\": [\"A\", \"B\"],\r\n\t\"name\": \"something\",\r\n\t\"obj\": {}\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"actual.json"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\r\n\t\"name\": \"something\",\r\n\t\"arr\": [\"B\", \"A\"],\r\n\t\"obj\": {\r\n\t\t\"extra\": null\r\n\t}\r\n}\n"}]}],"\n",["$","h4",null,{"children":"1.4.1.3 寫 Java code"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"final String expected = FileUtils.readFileToString(new File(\"expected.json\"), \"UTF-8\");\r\nfinal String actual = FileUtils.readFileToString(new File(\"actual.json\"), \"UTF-8\");\r\n\r\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.LENIENT).passed());\r\n// true\r\n\r\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.NON_EXTENSIBLE).passed());\r\n// false\r\n\r\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT_ORDER).passed());\r\n// false\r\n\r\nSystem.out.println(JSONCompare.compareJSON(expected, actual, JSONCompareMode.STRICT).passed());\r\n// false\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"1.4.2 使用 PODAM"}],"\n",["$","h4",null,{"children":"1.4.2.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependency>\r\n    <groupId>uk.co.jemos.podam</groupId>\r\n    <artifactId>podam</artifactId>\r\n    <version>7.2.7.RELEASE</version>\r\n</dependency>\n"}]}],"\n",["$","h4",null,{"children":"1.4.2.2 寫 Java code"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@SuppressWarnings(\"unchecked\")\r\nfinal List<String> randomData = new PodamFactoryImpl().manufacturePojo(List.class, String.class);\r\nSystem.out.println(randomData); // [J_hO7wAETv, F08kZk64aV, ncjXUymIT6, tk354lMwGX, CQhUbaS3nn]\n"}]}]],null,["$","$Lf",null,{"children":"$L10"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Whw4Rt2b0wCHzGyQmlt2o",{"children":[["$","$L11",null,{"children":"$L12"}],["$","$L13",null,{"children":"$L14"}],null]}]]}],false]],"m":"$undefined","G":["$15","$undefined"],"s":false,"S":true}
14:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
12:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
10:null
