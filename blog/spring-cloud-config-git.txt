1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T429,server:
    port: 8889

spring:
    cloud:
        config:
            server:
                git:
                    clone-on-start: true
                    refresh-rate: 10
                    ignore-local-ssh-settings: true
                    uri: git@github.com:blackr1234/spring-cloud-config-demo.git
                    default-label: master
                    search-paths:
                        - "{application}"
                    host-key: "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg="
                    host-key-algorithm: ecdsa-sha2-nistp256
                    private-key: |
                        -----BEGIN EC PRIVATE KEY-----
                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49
                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4
                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==
                        -----END EC PRIVATE KEY-----
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","spring-cloud-config-git"],"i":false,"f":[[["",{"children":["blog",{"children":["(2022-06)",{"children":["spring-cloud-config-git",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2022-06)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2022-06)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["spring-cloud-config-git",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2022-06)","children","spring-cloud-config-git","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Spring Cloud Config 簡介"}],"\n",["$","p",null,{"children":"Spring Cloud Config 既出現係為左針對喺雲端上運行既 apps 實現 config externalization，即係將 app 既配置綜合存放喺一個地方，例如係一個只負責存放 app 配置檔案既 Git repo，然後用一個 config server 去讀取呢個 Git repo 裡面既 app 配置檔案，當 app 開始運行，佢第一件會做既事就係從 config server 下載 app 配置，然後再用呢啲配置去初始化，例如係連接數據庫。"}],"\n",["$","h2",null,{"children":"1.1 Externalize 配置"}],"\n",["$","p",null,{"children":"將配置檔案存放喺另一個 Git repo 既好處："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["配置係會因時間而改變，我地冇理由只係因為配置檔有改動而重新 build 過個 artifact。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["視乎 CI pipeline（如 Jenkins）既步驟數量以及複雜程度，所需時間可以好長。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"有啲大公司會喺 pipeline 加入 code scan plugins，例如 SonarQube、Snyk、Fortify，呢啲 code scan 工具都需要唔少時間，亦有可能會因為呢啲 code scan 工具既資料庫更新，突然多左一啲 vulnerabilities 而令 pipeline 執行失敗。"}],"\n",["$","li",null,{"children":"如果 pipeline 係 deploy 上 public cloud，視乎雲端平台、雲端技術以及雲端平台既硬件資源，部署所需時間可能需要幾分鐘，慢過喺本地用 JVM 運行個 app。"}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":"如果我地將配置存放喺另一個地方，咁我地只需要重新啟動個 app，或者 call Spring Boot Actuator 提供既 API，就可以刷新 app 既配置，方便快捷。"}],"\n"]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://reflectoring.io/externalize-configuration/#configuration-servers","children":"Build Once, Run Anywhere: Externalize Your Configuration"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.2 關於 12-Factor 既 Config"}],"\n",["$","p",null,{"children":"12-Factor App 係為現代既 cloud apps 而訂立既開發規範。有人認為 Spring Cloud Config 達到 12-Factor App 既其中一項規範——Config。"}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"12 Factor implies that you should not store your configuration in a file in your application."}],"\n",["$","p",null,{"children":"But you can source those configs using other tools"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Puppet"}],"\n",["$","li",null,{"children":"Kubernetes ConfigMaps"}],"\n",["$","li",null,{"children":"Spring's configuration server"}],"\n",["$","li",null,{"children":"Databases/Data"}],"\n"]}],"\n",["$","p",null,{"children":"Why bother? It reduces the likelihood of developers accidentally committing/sharing secret credentials. You ensure that your application/service does not have logic switching based on the environment."}],"\n"]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","a",null,{"href":"https://dkbrummitt.com/hw/2019/08/12/12-factor/","children":"12 Factor Apps"}],"（",["$","a",null,{"href":"https://web.archive.org/web/20230503055645/https://dkbrummitt.com/hw/2019/08/12/12-factor/","children":"備用一"}],"／",["$","a",null,{"href":"https://archive.ph/ki0JP","children":"備用二"}],"）"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 設定 Git 配置 repo"}],"\n",["$","h2",null,{"children":"2.1 建立 GitHub repo"}],"\n",["$","p",null,{"children":"先建立一個全新既 GitHub repo，內容如下："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/spring-cloud-config-client-demo"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"spring-cloud-config-client-demo-dev.yml"}]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"spring-cloud-config-client-demo-dev.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"my:\r\n    prop: Hello GitHub!\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 使用 SSH"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"ssh-keyscan -t ecdsa github.com\r\nssh-keygen -t ecdsa -b 256 -m PEM -f keyfile\n"}]}],"\n",["$","p",null,{"children":["我地要將條 SSH public key（",["$","code",null,{"children":"keyfile.pub"}],"）加落個 Git repo 度，而條 SSH private key（",["$","code",null,{"children":"keyfile"}],"）就要放喺 config server 既配置度。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.3 Clone Git repo"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bat","children":":: Windows Command Prompt\r\nSET \"GIT_SSH_COMMAND=ssh -i keyfile -o IdentitiesOnly=yes\"\r\ngit clone ssh://git@github.com/blackr1234/spring-cloud-config-demo.git\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 動手寫"}],"\n",["$","p",null,{"children":"我地會用到 Spring Cloud Dependencies 黎做 dependency management，而 Spring Cloud Config Server 又會引入 Spring Boot Starter Web 既 dependency。"}],"\n",["$","h2",null,{"children":"3.1 Config server"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MainConfigServerApp.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/resources"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"bootstrap.yml"}]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"3.1.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>Hoxton.SR12</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-dependencies</artifactId>\r\n\t\t\t<version>2.3.12.RELEASE</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t<artifactId>spring-cloud-config-server</artifactId>\r\n\t</dependency>\r\n</dependencies>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.2 Java code"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MainConfigServerApp.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@EnableConfigServer\r\n@SpringBootApplication\r\npublic class MainConfigServerApp {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(MainConfigServerApp.class);\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.3 Bootstrap 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"bootstrap.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"encrypt:\r\n    key: michael ## or use the ENCRYPT_KEY environment variable\r\n\r\nspring:\r\n    cloud:\r\n        config:\r\n            server:\r\n                encrypt:\r\n                    enabled: true\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.4 Application 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"$f"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"spring.cloud.config.server.git.host-key"}]," 係 GitHub 既 host key，除非改用 GitLab 或者用其他 host key algorithm。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"spring.cloud.config.server.git.host-key-algorithm"}]," 要對應返我地喺 ",["$","a",null,{"href":"#22-%E4%BD%BF%E7%94%A8-ssh","children":"2.2 使用 SSH"}]," 生成 key 所使用既 command。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"spring.cloud.config.server.git.private-key"}]," 係我地喺 ",["$","a",null,{"href":"#22-%E4%BD%BF%E7%94%A8-ssh","children":"2.2 使用 SSH"}]," 生成既 ",["$","code",null,{"children":"keyfile"}]," 既內容。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 Config client"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MainConfigClientApp.java"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"MyComponent.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/resources"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"bootstrap.yml"}]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"3.2.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>Hoxton.SR12</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-dependencies</artifactId>\r\n\t\t\t<version>2.3.12.RELEASE</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t<artifactId>spring-cloud-starter-config</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-actuator</artifactId>\r\n\t</dependency>\r\n</dependencies>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.2.2 Java code"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MainConfigClientApp.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@SpringBootApplication\r\npublic class MainConfigClientApp {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(MainConfigClientApp.class);\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MyComponent.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@RefreshScope\r\n@Component\r\npublic class MyComponent {\r\n\r\n    @Value(\"${my.prop:not-found}\")\r\n    private String myProp;\r\n\r\n    @PostConstruct\r\n    public void init() {\r\n        log.info(\"my.prop: {}\", myProp);\r\n    }\r\n\r\n    @EventListener\r\n    public void refresh(RefreshScopeRefreshedEvent event) {\r\n        log.info(\"Refreshed class [{}].\", getClass().getName());\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.2.3 Bootstrap 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"bootstrap.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    application:\r\n        name: spring-cloud-config-client-demo\r\n    profiles:\r\n        active: dev ## should be externalized\r\n    cloud:\r\n        config:\r\n            enabled: true\r\n            uri: http://localhost:8889\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.2.4 Application 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"management:\r\n    endpoints:\r\n        web:\r\n            exposure:\r\n                include: refresh, env\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 簡單測試"}],"\n",["$","h2",null,{"children":"4.1 步驟"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"啟動 config server。"}],"\n",["$","li",null,{"children":"啟動 config client。"}],"\n",["$","li",null,{"children":["檢查 ",["$","code",null,{"children":"my.prop"}]," 既 value，應該係而家 Git 上面既 value。"]}],"\n",["$","li",null,{"children":["更改 Git 上既 ",["$","code",null,{"children":"my.prop"}]," 既 value。"]}],"\n",["$","li",null,{"children":["Call config client 既 ",["$","code",null,{"children":"/actuator/refresh"}]," API。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Response body 裡面會有一個 array，其中一個 string 就係 ",["$","code",null,{"children":"my.prop"}],"，意味住 ",["$","code",null,{"children":"my.prop"}]," 既 value 改變左。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["檢查 ",["$","code",null,{"children":"my.prop"}]," 既 value，應該係我地改成既新 value。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"4.2 檢查 property value"}],"\n",["$","p",null,{"children":["針對 ",["$","code",null,{"children":"my.prop"}],"，我地有以下既方法："]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Call config client 既 ",["$","code",null,{"children":"/actuator/env"}]," API，response body 會有 ",["$","code",null,{"children":"my.prop"}]," 既 value，呢個方法只需要配置好 Actuator 就可以用。"]}],"\n",["$","li",null,{"children":["因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 ",["$","code",null,{"children":"my.prop"}]," 既 value。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 配置檔既應用次序"}],"\n",["$","p",null,{"children":"喺 Spring，如果我地唔用 Spring Cloud Config 去 externalize 配置，咁我地個 artifact JAR 檔裡面可以有："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}"}]}],"\n"]}],"\n",["$","p",null,{"children":["因為 Spring 支援 YAML 以及 Java properties 既格式，而 YAML 格式又可以用 ",["$","code",null,{"children":".yaml"}]," 以及 ",["$","code",null,{"children":".yml"}]," 作為副檔名，咁我地其實最盡可以有 ",["$","code",null,{"children":"6"}]," 個檔案。"]}],"\n",["$","p",null,{"children":"而如果我地用 Spring Cloud Config 去 externalize 配置，咁我地喺既 Git repo 就會有："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}"}]}],"\n"]}],"\n",["$","p",null,{"children":["如果又各有 ",["$","code",null,{"children":"yaml"}],"、",["$","code",null,{"children":".yml"}]," 以及 ",["$","code",null,{"children":".properties"}]," 副檔名，咁就可以有 ",["$","code",null,{"children":"12"}]," 個組合咁多既檔案。"]}],"\n",["$","p",null,{"children":"經過反翻既測試，最後搵到 Spring Cloud Config 既 Git backend 讀取檔案既次序係："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yaml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application.properties"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}.yaml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}.properties"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}.yaml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}.properties"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}.yaml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}.properties"}]}],"\n"]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["呢個次序既意思係，當同一個名既配置（例如 ",["$","code",null,{"children":"my.prop"}],"）出現喺以上所有既檔案裡面，咁 Spring Cloud Config 係會以呢個次序去讀取檔案去取值，而較遲讀取既值係會覆蓋之前讀取既值。"]}],"\n",["$","li",null,{"children":"Java properties 檔會「贏」過曬 YAML 格式，最終值會係黎自 Java properties 配置檔。"}],"\n",["$","li",null,{"children":["冇 ",["$","code",null,{"children":"-{profile}"}]," 既檔案就係 default profile，而特定既環境 profile 係一定會比較遲讀取，覆蓋默認既配置。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"6 新版本"}],"\n",["$","h2",null,{"children":"6.1 App 需要修改既地方"}],"\n",["$","h3",null,{"children":"6.1.1 版本"}],"\n",["$","p",null,{"children":"更新 config server 以及 config client 既 dependency managements 去以下既版本："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-dependencies</artifactId>\r\n\t\t\t<version>2.7.0</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>2021.0.3</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":["6.1.2 ",["$","code",null,{"children":"bootstrap.yml"}]," 合併入 ",["$","code",null,{"children":"application.yml"}]]}],"\n",["$","p",null,{"children":["最新版既 Spring Cloud Config 已經唔再用 ",["$","code",null,{"children":"bootstrap.yml"}]," 檔，所以我地要將佢既 properties 搬去 ",["$","code",null,{"children":"application.yml"}],"。"]}],"\n",["$","p",null,{"children":["不過如果真係想用返 ",["$","code",null,{"children":"bootstrap.yml"}]," 呢個舊既方式，可以加入呢個 dependency："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<dependency>\r\n\t<groupId>org.springframework.cloud</groupId>\r\n\t<artifactId>spring-cloud-starter-config</artifactId>\r\n</dependency>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":["6.1.3 新 ",["$","code",null,{"children":"spring.config.import"}]," 配置"]}],"\n",["$","p",null,{"children":["Spring Cloud Config client 既 ",["$","code",null,{"children":"spring.cloud.config.uri"}]," 已經被 ",["$","code",null,{"children":"spring.config.import"}]," 取代，而 value 都有所唔同："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"# 舊配置，bootstrap.yml 檔\r\nspring:\r\n  cloud:\r\n    config:\r\n\t  uri: http://localhost:8889\r\n\r\n---\r\n\r\n# 新配置，application.yml 檔\r\nspring:\r\n  config:\r\n    import: 'optional:configserver:http://localhost:8889'\n"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["如果唔加上 ",["$","code",null,{"children":"optional:"}],"，咁當 config client 啟動既時候連接唔到 config server，config client 就會 throw exception 並且終止運行。"]}],"\n",["$","li",null,{"children":["如果加上 ",["$","code",null,{"children":"optional:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"就算 config client 啟動果一刻連接唔到 config server，佢都唔會終止運行。"}],"\n",["$","li",null,{"children":["如果之後我地手動 call config client 既 ",["$","code",null,{"children":"/actuator/refresh"}]," API，而 config client 成功連接到 config server，咁佢會重新獲取配置，而有 ",["$","code",null,{"children":"@RefreshScope"}]," 既 components 都會獲得新既配置數值。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"7 連線容錯測試"}],"\n",["$","p",null,{"children":"根據測試，Git backend 係可以容許連線失敗，因為 config server 會有 file cache。"}],"\n",["$","h2",null,{"children":"7.1 使用 Git backend 而 Git 連線失敗"}],"\n",["$","p",null,{"children":"模擬連線失敗場景："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"啟動 config server。"}],"\n",["$","li",null,{"children":"啟動 config client。"}],"\n",["$","li",null,{"children":["呢個時候，我地可以見到 config server 會將個 Git repo clone 到一個叫 ",["$","code",null,{"children":"config-repo-<random numbers>"}]," 既 folder，呢個 folder 係喺我地既 JVM temp folder（e.g. ",["$","code",null,{"children":"C:/Users/Michael/AppData/Local/Temp"}],"）裡面。"]}],"\n",["$","li",null,{"children":"喺 OS 層面斷開網絡。"}],"\n",["$","li",null,{"children":"重新啟動 config client，佢依然可以喺 config server 度拎到配置，咁係因為 config server 用左上面提到既 file cache。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"8 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","a",null,{"href":"https://blog.csdn.net/qq_20597727/article/details/82465069","children":"Spring Cloud Config 使用與原理分析"}],"（",["$","a",null,{"href":"https://web.archive.org/web/20230503105421/https://blog.csdn.net/qq_20597727/article/details/82465069","children":"備用一"}],"／",["$","a",null,{"href":"https://archive.ph/hTqbk","children":"備用二"}],"）"]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://medium.com/javarevisited/lets-learn-together-sessions-spring-cloud-config-server-17ecd171d86","children":"Let’s Learn Together Sessions: Spring Cloud Config Server"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://stackoverflow.com/questions/67507452/no-spring-config-import-property-has-been-defined/70813003#70813003","children":"StackOverflow - No spring.config.import property has been defined"}]}],"\n",["$","li",null,{"children":[["$","a",null,{"href":"https://spring.io/blog/2020/12/22/spring-cloud-2020-0-0-aka-ilford-is-available","children":"Spring 官方 blog - Spring Cloud 2020.0.0 (aka Ilford) Is Available"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["NOTE: Bootstrap has been disabled by default. The new way of importing configuration is via the new ",["$","code",null,{"children":"spring.config.import"}]," functionality provided by Spring Boot 2.4."]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["If you require the legacy bootstrap functionality add the ",["$","code",null,{"children":"org.springframework.cloud:spring-cloud-starter-bootstrap"}]," dependency to your project."]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","a",null,{"href":"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/#config-first-bootstrap","children":"Spring Cloud Config - Config First Bootstrap"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":"Spring Boot 2.4 introduced a new way to import configuration data via the spring.config.import property. This is now the default way to bind to Config Server."}],"\n",["$","p",null,{"children":"To optionally connect to config server set the following in application.properties:"}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"application.properties"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"spring.config.import=optional:configserver:\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"延伸閱讀："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://spring.io/blog/2020/08/14/config-file-processing-in-spring-boot-2-4","children":"Spring 官方 blog - Config file processing in Spring Boot 2.4"}]}],"\n"]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","yGiOaq-nakPTxS8cI4l3A",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
