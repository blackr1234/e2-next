1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T64f,<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>3.2.5</version>
</parent>

<dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	<dependency>
		<groupId>com.mysql</groupId>
		<artifactId>mysql-connector-j</artifactId>
	</dependency>

	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-redis</artifactId>
	</dependency>

	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<scope>provided</scope>
	</dependency>
</dependencies>

<profiles>
	<profile>
		<id>local</id>
		<build>
			<resources>
				<resource>
					<directory>src/main/resources/local</directory>
				</resource>
			</resources>
		</build>
		<dependencies>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
			</dependency>
		</dependencies>
	</profile>

	<profile>
		<id>cloud</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<build>
			<resources>
				<resource>
					<directory>src/main/resources/cloud</directory>
				</resource>
			</resources>
		</build>
		<dependencies>
			<dependency>
				<groupId>com.microsoft.sqlserver</groupId>
				<artifactId>mssql-jdbc</artifactId>
			</dependency>
		</dependencies>
	</profile>
</profiles>
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","spring-caching-redis"],"i":false,"f":[[["",{"children":["blog",{"children":["(2021-09)",{"children":["spring-caching-redis",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2021-09)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["spring-caching-redis",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children","spring-caching-redis","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Redis 簡介"}],"\n",["$","p",null,{"children":"一般既 web applications 都會將最重要既資料（例如客戶資料、交易數據）放喺一個或者多個（如果係 microservice architecture）RDBMS 既 databases 裡面，而呢啲 databases 既資料都可以被視作為 single source of truth。不過，資料可以分好多種，除左最重要、改既話一定要直接改 database 既紀錄果啲，仲有一啲比如係用戶網頁登入既 session states、多國語言既翻譯文本，或者係一啲基本上都唔會點改變既業務配置或者程序配置。為左減少 database 既存取、加快查詢速度，我地可以用唔同既 caching library，例如 Redis、Memcached、Ehcache、Caffeine。"}],"\n",["$","p",null,{"children":"關於 Redis："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["係一個 in-memory database。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"佢既 data 都可以 save 落 disk（例如 Redis server shutdown 果陣，或者用 Redis command）。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":"資料可以同時畀好多個 Redis client 既 application instances 去存取，大家存取到既資料都係一樣既。"}],"\n",["$","li",null,{"children":"支援 transaction，隔離狀態咁一次過執行多個 commands，但係就唔 ACID（大概只可以做到 isolation，因為唔支援 rollback）。"}],"\n",["$","li",null,{"children":"可以建立多個 replicas 以及 sentinels 去達到 high availability。"}],"\n",["$","li",null,{"children":"支援搭建 cluster 做 distributed cache。"}],"\n",["$","li",null,{"children":"可以視為一個好快既以讀取為主既 key-value database。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 安裝"}],"\n",["$","h2",null,{"children":"2.1 Docker image"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker container run -d --rm -p 6379:6379 -v \"C:/docker-data/redis:/data\" --name redis redis:latest redis-server --save 10 1 --requirepass redispw\n"}]}],"\n",["$","p",null,{"children":"Redis Docker image 裡面已經包含 Redis CLI，所以我地只需要接連入去個 container 既 CLI 就可以用到。"}],"\n",["$","p",null,{"children":"連接 Redis CLI："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["方法一","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"去 Redis Docker container 頁面既右上角果度按 CLI 圖示"}],"\n",["$","li",null,{"children":["彈出黎既 CLI 視窗已經連接左 Redis Docker container 既 CLI，我地可以執行：","\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"redis-cli -a redispw\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["方法二","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["喺 Windows Command Prompt 或者 macOS Terminal 執行：","\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker container exec -it <redis container name/ID> redis-cli -a redispw\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 Windows（免安裝）"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["去 ",["$","a",null,{"href":"https://github.com/tporadowski/redis/releases","children":"tporadowski/redis GitHub"}]," 下載 ZIP 版既 Redis server。"]}],"\n",["$","li",null,{"children":"解壓縮個 ZIP 檔。"}],"\n",["$","li",null,{"children":["執行 command：",["$","code",null,{"children":"redis-server.exe redis.windows.conf"}]]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.3 macOS（Homebrew）"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["執行 command：",["$","code",null,{"children":"brew install redis"}]]}],"\n",["$","li",null,{"children":["執行 command：",["$","code",null,{"children":"redis-server"}]]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 動手寫"}],"\n",["$","p",null,{"children":"Project setup："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Spring Boot（web）"}],"\n",["$","li",null,{"children":"JPA／Hibernate"}],"\n",["$","li",null,{"children":"MySQL 或 MariaDB"}],"\n",["$","li",null,{"children":"Redis"}],"\n"]}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/controller"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"PersonController.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/entity"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"PersonEntity.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/repo"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"PersonRepo.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/service"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"PersonService.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"MainApplication.java"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"RedisConfig.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/resources"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/cloud"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/local"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h2",null,{"children":"3.1 Maven dependencies"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["新、舊版本既 Spring Data Redis（由 Spring Boot Starter Data Redis 引入）對於透過 annotations 黎做 Redis caching 既差異：","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["新版 ",["$","code",null,{"children":"2.x"}]," 既 ",["$","code",null,{"children":"RedisCacheManager"}]," 裡面用到 ",["$","code",null,{"children":"RedisCacheConfiguration"}],"，所以係用 ",["$","code",null,{"children":"RedisCacheConfiguration"}]," 黎配置個別 cache，如果直接配置 ",["$","code",null,{"children":"RestTemplate"}]," bean 係唔會起到作用。"]}],"\n",["$","li",null,{"children":["舊版 ",["$","code",null,{"children":"1.x"}]," 係直接配置 ",["$","code",null,{"children":"RestTemplate"}]," bean。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["新、舊版本既 Spring Boot Starter Data Redis 引入既 Redis client 既差異：","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Spring Boot Starter Data Redis ",["$","code",null,{"children":"1.x"}]," 默認用 Jedis，冇引入 Lettuce 既 dependencies。"]}],"\n",["$","li",null,{"children":["Spring Boot Starter Data Redis ",["$","code",null,{"children":"2.x"}],"、",["$","code",null,{"children":"3.x"}]," 默認用 Lettuce，冇引入 Jedis 既 dependencies。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["新、舊版本既 Spring Data Redis 配置既差異：","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Spring Boot ",["$","code",null,{"children":"1.x"}],"、",["$","code",null,{"children":"2.x"}]," 既配置係以 ",["$","code",null,{"children":"spring.redis"}]," 開頭。"]}],"\n",["$","li",null,{"children":["Spring Boot ",["$","code",null,{"children":"3.x"}]," 既配置係以 ",["$","code",null,{"children":"spring.data.redis"}]," 開頭。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":"我地會用 MySQL／MariaDB 作為 database。"}],"\n",["$","li",null,{"children":["我地會用 Maven profiles。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"本地用 H2 database。"}],"\n",["$","li",null,{"children":"生產環境用 MySQL。"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"$f"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 Application 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"src/main/resources/cloud/application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    jpa:\r\n        show-sql: true\r\n        open-in-view: false\r\n        hibernate:\r\n            ddl-auto: update\r\n        properties:\r\n            hibernate:\r\n                dialect: org.hibernate.dialect.MySQLDialect\r\n    datasource:\r\n        url: jdbc:mysql://localhost:3306/dev\r\n        username: mysql\r\n        password: mysql\r\n        driver-class-name: com.mysql.cj.jdbc.Driver\r\n    cache:\r\n        type: redis\r\n    data:\r\n        redis:\r\n            host: localhost\r\n            port: 6379\r\n            database: 0\r\n            password: redispw\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"src/main/resources/local/application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    jpa:\r\n        show-sql: true\r\n        open-in-view: false\r\n        hibernate:\r\n            ddl-auto: update\r\n        properties:\r\n            hibernate:\r\n                dialect: org.hibernate.dialect.H2Dialect\r\n    datasource:\r\n        url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4\r\n        username: sa\r\n        password:\r\n        driver-class-name: org.h2.Driver\r\n    h2:\r\n        console:\r\n            enabled: true\r\n            path: /h2-console\r\n    cache:\r\n        type: redis\r\n    data:\r\n        redis:\r\n            host: localhost\r\n            port: 6379\r\n            database: 0\r\n            password: redispw\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.3 寫 Java code"}],"\n",["$","h3",null,{"children":"3.3.1 Entity"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"PersonEntity.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Data\r\n@Accessors(chain = true)\r\n@FieldDefaults(level = PRIVATE)\r\n@Entity\r\n@Table(name = \"person\", uniqueConstraints = {\r\n    @UniqueConstraint(name = \"UQ_person_1\", columnNames = { \"email\" })\r\n})\r\npublic class PersonEntity {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    @Column(name = \"id\")\r\n    Long id;\r\n\r\n    @Column(nullable = false)\r\n    String email;\r\n\r\n    String name;\r\n}\n"}]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"id"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Database 層面 auto-increment"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"email"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Database 層面 guarantee 一定唔會 ",["$","code",null,{"children":"null"}]]}],"\n",["$","li",null,{"children":"Database 層面 guarantee 一定唔會重複"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.3.2 Repository"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"PersonRepo.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"import org.springframework.cache.annotation.Cacheable;\r\n\r\n@CacheConfig(cacheManager = \"personCache\")\r\n@Repository\r\npublic interface PersonRepo extends JpaRepository<PersonEntity, Long> {\r\n\r\n    @CachePut(value = \"personByEmail\", key = \"#entity.email\", unless = \"#result.id == null\")\r\n    @Override <S extends PersonEntity> S save(S entity);\r\n\r\n    @Cacheable(value = \"personByEmail\", key = \"#email\", unless = \"#result == null\")\r\n    Optional<PersonEntity> findOneByEmail(String email);\r\n\r\n    @CacheEvict(value = \"personByEmail\", key = \"#email\")\r\n    void deleteByEmail(String email);\r\n}\n"}]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"@CachePut"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"用 return value 覆蓋或者新增 cache 紀錄。"}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"value"}]," 以及 ",["$","code",null,{"children":"key"}]," 會組合成 cache 既 key 名，例如 ",["$","code",null,{"children":"personByEmail::michaelboyboy@gmail.com"}],"。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"unless"}]," 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"@Cacheable"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"如果 cache 已經存在相關紀錄，返回 cache 既紀錄；否則，call 真 method（訪問 database），然後將 return value 放入 cache。"}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"value"}]," 以及 ",["$","code",null,{"children":"key"}]," 會組合成 cache 既 key 名，例如 ",["$","code",null,{"children":"personByEmail::michaelboyboy@gmail.com"}],"。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"unless"}]," 用黎喺攞到真既 return value 之後，根據自定義既邏輯去選擇性咁去做定唔做相關操作。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"@CacheEvict"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"刪除 cache 紀錄。"}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"value"}]," 以及 ",["$","code",null,{"children":"key"}]," 會組合成 cache 既 key 名，例如 ",["$","code",null,{"children":"personByEmail::michaelboyboy@gmail.com"}],"。"]}],"\n",["$","li",null,{"children":["可以用 ",["$","code",null,{"children":"allEntries = true"}]," 黎刪曬所有 ",["$","code",null,{"children":"value"}]," 下既所有 cache 紀錄（不限 ",["$","code",null,{"children":"key"}],"）。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.3.3 Service"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"PersonService.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"import org.springframework.beans.BeanUtils;\r\nimport org.springframework.transaction.annotation.Transactional;\r\n\r\n@CacheConfig(cacheManager = \"personCache\")\r\n@Service\r\n@Transactional(rollbackFor = Throwable.class)\r\npublic class PersonService {\r\n\r\n    @Autowired\r\n    PersonRepo personRepo;\r\n\r\n    public PersonEntity insert(PersonEntity person) {\r\n        return personRepo.save(person);\r\n    }\r\n\r\n    public PersonEntity update(PersonEntity person) {\r\n        return personRepo.findOneByEmail(person.getEmail()).map(e -> {\r\n            BeanUtils.copyProperties(person, e, \"id\");\r\n            return personRepo.save(e);\r\n        }).orElse(null);\r\n    }\r\n\r\n    public PersonEntity getByEmail(String email) {\r\n        return personRepo.findOneByEmail(email).orElse(null);\r\n    }\r\n\r\n    public void deleteByEmail(String email) {\r\n        personRepo.deleteByEmail(email);\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"update"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["喺 database 或者 cache 攞出紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Cache：透過 ",["$","code",null,{"children":"PersonRepo#findOneByEmail"}]," 既 ",["$","code",null,{"children":"@Cacheable"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["將 ",["$","code",null,{"children":"id"}]," 以外既 fields 覆蓋原有紀錄（保留 ",["$","code",null,{"children":"id"}]," value）","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["利用 String 自帶既 ",["$","code",null,{"children":"BeanUtils#copyProperties(Object source, Object target, String... ignoreProperties)"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["更新 database 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["透過 ",["$","code",null,{"children":"PersonRepo#save"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["新增或者更新 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["透過 ",["$","code",null,{"children":"PersonRepo#save"}]," 既 ",["$","code",null,{"children":"@CachePut"}]]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.3.4 Controller"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"PersonController.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@RestController\r\n@RequestMapping(\"person\")\r\npublic class PersonController {\r\n\r\n    @Autowired PersonService personService;\r\n\r\n    @PostMapping\r\n    public PersonEntity insert(@RequestBody PersonEntity person) {\r\n        return personService.insert(person);\r\n    }\r\n\r\n    @PutMapping\r\n    public PersonEntity update(@RequestBody PersonEntity person) {\r\n        return personService.update(person);\r\n    }\r\n\r\n    @GetMapping(\"{email}\")\r\n    public PersonEntity get(@PathVariable(\"email\") String email) {\r\n        return personService.getByEmail(email);\r\n    }\r\n\r\n    @DeleteMapping(\"{email}\")\r\n    public void delete(@PathVariable(\"email\") String email) {\r\n        personService.deleteByEmail(email);\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":["3.3.5 自定義 ",["$","code",null,{"children":"RedisCacheManager"}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"RedisConfig.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@EnableCaching\r\n@Configuration\r\npublic class RedisConfig {\r\n\r\n    @Bean\r\n    public RedisCacheManager personCache(RedisConnectionFactory connectionFactory) {\r\n        return RedisCacheManager.builder(connectionFactory)\r\n                .withCacheConfiguration(\"personByEmail\", personRedisCacheConfig())\r\n                .build();\r\n    }\r\n\r\n    @Bean\r\n    public RedisCacheConfiguration personRedisCacheConfig() {\r\n        return RedisCacheConfiguration.defaultCacheConfig()\r\n                .disableCachingNullValues()\r\n                .entryTtl(Duration.ofMinutes(10))\r\n                .serializeKeysWith(SerializationPair.fromSerializer(RedisSerializer.string()))\r\n                .serializeValuesWith(SerializationPair.fromSerializer(RedisSerializer.json()));\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"@EnableCaching"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"一定要加上呢個 annotation 先會開啟 caching 功能，否則所有 caching 相關既 annotations 都唔會生效。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["配置 ",["$","code",null,{"children":"redisCacheConfiguration"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["根據 ",["$","code",null,{"children":"RedisCacheConfiguration#defaultCacheConfig"}],"，Redis caching 默認既 value serializer 係 ",["$","code",null,{"children":"JdkSerializationRedisSerializer"}],"。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"喺 runtime 既時候，當需要 cache 既 method 被 call 完之際，return value 就要被 cache。"}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"JdkSerializationRedisSerializer"}]," 所配置既 ",["$","code",null,{"children":"DefaultSerializer"}]," 係會 check 要 serialize 既對象係咪 ",["$","code",null,{"children":"Serializable"}],"。"]}],"\n",["$","li",null,{"children":["但因為 return type 係 ",["$","code",null,{"children":"PersonEntity"}],"、",["$","code",null,{"children":"List<PersonEntity"}]," 或者 ",["$","code",null,{"children":"Optional<PersonEntity>"}],"，實際對象 ",["$","code",null,{"children":"PersonEntity"}]," 唔係一個 ",["$","code",null,{"children":"Serializable"}],"。"]}],"\n",["$","li",null,{"children":["咁就會導致 exception ",["$","code",null,{"children":"DefaultSerializer requires a Serializable payload but received an object of type [code.entity.PersonEntity]"}],"。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["有 ",["$","code",null,{"children":"2"}]," 個方法解決","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地可以將 ",["$","code",null,{"children":"PersonEntity"}]," 改成 implement ",["$","code",null,{"children":"Serializable"}],"。"]}],"\n",["$","li",null,{"children":["如果我地想將 cache value 儲成 JSON 格式，就要將 value serializer 改成用 Jackson Databind 既 ",["$","code",null,{"children":"GenericJackson2JsonRedisSerializer"}],"（相當於 ",["$","code",null,{"children":"RedisSerializer.json()"}],"）。"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"disableCachingNullValues"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Return value 係 ",["$","code",null,{"children":"null"}]," 既話都會出 exception，除非有 ",["$","code",null,{"children":"unless"}],"。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"entryTtl"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Cache 紀錄既存活時間（time-to-live）。"}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 測試"}],"\n",["$","h2",null,{"children":"4.1 開啟 MySQL／MariaDB SQL log"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"SET global general_log = 1;\r\nSET global log_output = 'table';\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"4.2 建立 database"}],"\n",["$","p",null,{"children":"先用 HeidiSQL（Windows）或者 Sequel Pro（macOS）連接 MySQL 或者 MariaDB。"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Host"}],["$","th",null,{"style":{"textAlign":"center"},"children":"Port"}]]}]}],["$","tbody",null,{"children":["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"127.0.0.1"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"3306"}]}]]}]}]]}],"\n",["$","p",null,{"children":"然後執行 SQL："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"CREATE DATABASE mydb;\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"4.3 啟動 Spring Boot web application"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"mvn spring-boot:run\n"}]}],"\n",["$","p",null,{"children":["如果 Spring Boot web application 成功啟動，咁我地既 ",["$","code",null,{"children":"person"}]," table 都會由個 application 自動創建。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":["4.4 驗證 ",["$","code",null,{"children":"@CachePut"}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"@CachePut"}]," 既 behaviors："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["如果有 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"更新 cache 紀錄"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["如果冇 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"新增 cache 紀錄"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"4.4.1 Call POST API"}],"\n",["$","p",null,{"children":"喺 Postman 裡面 call："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"POST localhost:8080/person\n"}]}],"\n",["$","p",null,{"children":"Request body："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\r\n\t\"email\": \"michaelboyboy@gmail.com\",\r\n\t\"name\": \"mick\"\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.4.2 確保 MySQL／MariaDB 有新紀錄"}],"\n",["$","p",null,{"children":"我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇新增到紀錄。"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"SELECT * FROM person;\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.4.3 確保 Redis 有新紀錄"}],"\n",["$","p",null,{"children":"我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。"}],"\n",["$","p",null,{"children":"執行 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"GET personByEmail::michaelboyboy@gmail.com\n"}]}],"\n",["$","p",null,{"children":"應該會返回："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"\"{\\\"@class\\\":\\\"code.entity.PersonEntity\\\",\\\"id\\\":1,\\\"email\\\":\\\"michaelboyboy@gmail.com\\\",\\\"name\\\":\\\"mick\\\"}\"\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.4.4 Call PUT API"}],"\n",["$","p",null,{"children":"喺 Postman 裡面 call："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"PUT localhost:8080/person\n"}]}],"\n",["$","p",null,{"children":"Request body："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\r\n\t\"email\": \"michaelboyboy@gmail.com\",\r\n\t\"name\": \"chung\"\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.4.5 確保 MySQL／MariaDB 紀錄改變"}],"\n",["$","p",null,{"children":"我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇改變到紀錄。"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"SELECT * FROM person;\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.4.6 確保 Redis 紀錄改變"}],"\n",["$","p",null,{"children":"我地可以用 Redis CLI 去檢查 Redis database 裡面有冇改變到紀錄。"}],"\n",["$","p",null,{"children":"執行 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"GET personByEmail::michaelboyboy@gmail.com\n"}]}],"\n",["$","p",null,{"children":"應該會返回："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"\"{\\\"@class\\\":\\\"code.entity.PersonEntity\\\",\\\"id\\\":1,\\\"email\\\":\\\"michaelboyboy@gmail.com\\\",\\\"name\\\":\\\"chung\\\"}\"\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":["4.5 驗證 ",["$","code",null,{"children":"@Cacheable"}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"@Cacheable"}]," 既 behaviors："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["如果有 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"返回 cache 紀錄"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["如果冇 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"新增 cache 紀錄，然後返回 cache 紀錄"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"4.5.1 清空 Redis 所有紀錄"}],"\n",["$","p",null,{"children":"執行 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"FLUSHDB\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.5.2 Call GET API（多次）"}],"\n",["$","p",null,{"children":"喺 Postman 裡面 call 幾次："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"GET localhost:8080/person/michaelboyboy@gmail.com\n"}]}],"\n",["$","p",null,{"children":"應該會返回："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-json","children":"{\r\n\t\"id\": 1,\r\n\t\"email\": \"michaelboyboy@gmail.com\",\r\n\t\"name\": \"chung\"\r\n}\n"}]}],"\n",["$","p",null,{"children":"註：必須確保每次返回既 JSON object 都係一致。"}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.5.3 確保 Redis 有新紀錄"}],"\n",["$","p",null,{"children":"我地可以用 Redis CLI 去檢查 Redis database 裡面有冇新增到紀錄。"}],"\n",["$","p",null,{"children":"執行 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"GET personByEmail::michaelboyboy@gmail.com\n"}]}],"\n",["$","p",null,{"children":"應該會返回："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"\"{\\\"@class\\\":\\\"code.entity.PersonEntity\\\",\\\"id\\\":1,\\\"email\\\":\\\"michaelboyboy@gmail.com\\\",\\\"name\\\":\\\"chung\\\"}\"\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.5.4 檢查 application log"}],"\n",["$","p",null,{"children":"我地可以檢查 console 裡面 Spring 既 application log，睇下屬於 Hibernate 既 SQL call log 係咪只有一行："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"Hibernate: select personenti0_.id as id1_0_, personenti0_.email as email2_0_, personenti0_.name as name3_0_ from person personenti0_ where personenti0_.email=?\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.5.5 檢查 MySQL／MariaDB SQL log"}],"\n",["$","p",null,{"children":"我地可以檢查 database 既 SQL log，睇下有冇由 application 執行既相關 SQL。"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"SELECT * FROM mysql.general_log ORDER BY event_time DESC;\n"}]}],"\n",["$","p",null,{"children":["因為後續既 API calls 都應該係訪問 Redis cache，所以睇下 ",["$","code",null,{"children":"argument"}]," column 呢個 value 係咪只有一行："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"select personenti0_.id as id1_0_, personenti0_.first_name as first_na2_0_, personenti0_.status as status3_0_ from person personenti0_ where personenti0_.first_name='mick'\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":["4.6 驗證 ",["$","code",null,{"children":"@CacheEvict"}]]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"@CacheEvict"}]," 既 behavior："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["如果有 cache 紀錄","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"刪除 cache 紀錄"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"4.6.1 Call DELETE API"}],"\n",["$","p",null,{"children":"喺 Postman 裡面 call："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"DELETE localhost:8080/person/michaelboyboy@gmail.com\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.6.2 確保 MySQL／MariaDB 紀錄消失"}],"\n",["$","p",null,{"children":"我地可以用 HeidiSQL（Windows）或者 Sequel Pro（macOS）去睇下裡面有冇刪除到紀錄。"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"SELECT * FROM person;\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"4.6.3 確保 Redis 紀錄消失"}],"\n",["$","p",null,{"children":"我地可以用 Redis CLI 去檢查 Redis database 裡面有冇刪除到紀錄。"}],"\n",["$","p",null,{"children":"執行 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"GET personByEmail::michaelboyboy@gmail.com\n"}]}],"\n",["$","p",null,{"children":"應該會返回："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"(nil)\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 筆記"}],"\n",["$","h2",null,{"children":"5.1 Redis CLI 功能"}],"\n",["$","p",null,{"children":"首先建立連線："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"redis-cli -h localhost -p 6379\n"}]}],"\n",["$","h3",null,{"children":"5.1.1 改變 database"}],"\n",["$","p",null,{"children":["Redis 有 ",["$","code",null,{"children":"16"}]," 個 databases（",["$","code",null,{"children":"0"}],"-based，",["$","code",null,{"children":"0"}]," 至 ",["$","code",null,{"children":"15"}],"）。"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"SELECT 0\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.2 列出所有 keys"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"KEYS *\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.3 新增 string key-value pair"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"SET key-name my-value\n"}]}],"\n",["$","p",null,{"children":"設定一定秒數後自動清除："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"SET key-name my-value EX 10\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.4 查詢數據類型"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"TYPE key-name\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.5 查詢 string 數據"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"GET key-name\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.6 清空目前 database 所有內容"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"FLUSHDB\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.7 清空所有 databases 所有內容"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"FLUSHALL\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"6 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://springboot.io/t/topic/2538","children":"Spring Boot Cache 集成 Spring Data Redis 1.x 與 2.x 的差異"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://stackoverflow.com/questions/50272157/spring-data-redis-override-default-serializer/52971347#52971347","children":"StackOverflow - Spring data redis override default serializer"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"http://redisdoc.com/string/index.html","children":"Redis 命令參考"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"http://redisdoc.com/topic/transaction.html","children":"Redis 命令參考 - 事務（transaction）"}]}],"\n"]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Xq_mf4-xGJ80t2pB2sKCL",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
