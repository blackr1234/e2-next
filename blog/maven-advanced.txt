1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T4d2,<groupId>com.michael</groupId>
<artifactId>alice-shaded</artifactId>
<version>1.0</version>
<packaging>jar</packaging>

<dependencies>
	<dependency>
		<groupId>com.michael</groupId>
		<artifactId>alice</artifactId>
		<version>1.0</version>
	</dependency>
</dependencies>

<build>
	<plugins>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-shade-plugin</artifactId>
			<version>3.5.2</version>
			<configuration>
				<promoteTransitiveDependencies>true</promoteTransitiveDependencies>
				<keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
				<artifactSet>
					<includes>
						<include>com.michael:charlie</include>
						<include>com.michael:alice</include>
					</includes>
				</artifactSet>
				<relocations>
					<relocation>
						<pattern>com.charlie</pattern>
						<shadedPattern>com.alice</shadedPattern>
						<includes>
							<include>com.charlie.*</include>
						</includes>
					</relocation>
				</relocations>
			</configuration>
			<executions>
				<execution>
					<phase>package</phase>
					<goals>
						<goal>shade</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
	</plugins>
</build>
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","maven-advanced"],"i":false,"f":[[["",{"children":["blog",{"children":["(2024-02)",{"children":["maven-advanced",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2024-02)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-02)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["maven-advanced",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-02)","children","maven-advanced","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Maven dependency mediation"}],"\n",["$","p",null,{"children":"相信開發過帶有複雜 dependencies 既 Maven 項目既 Java developers 都可能曾經遇過呢個問題："}],"\n",["$","blockquote",null,{"children":["\n",["$","p",null,{"children":["我個 Maven 項目有 ",["$","code",null,{"children":"2"}]," 個或以上既 direct dependencies，呢啲 dependencies 都係 depend on 一個相同 ",["$","code",null,{"children":"groupId"}]," + ",["$","code",null,{"children":"artifactId"}]," 但係唔同 ",["$","code",null,{"children":"version"}]," 既 Maven library，咁到底我個項目最終會 depends on 呢個 transitive dependency 既邊一個版本號碼？"]}],"\n"]}],"\n",["$","p",null,{"children":"答案："}],"\n",["$","p",null,{"children":["Maven 3 喺處理一個項目既 nested dependencies 裡面重複 declare 既 dependencies 既時候，會用到 ",["$","code",null,{"children":"2"}]," 個 rules 去揀選版本號碼："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Maven 會睇曬呢啲重複既 dependency declarations，揀最接近我地既項目既果個 dependency declaration，然後就用佢既版本號碼。"}],"\n",["$","li",null,{"children":["如果喺距離上有平排既情況，Maven 會揀 dependency tree 裡面較上 declare 既果個版本號碼（POM 檔既 ",["$","code",null,{"children":"<dependencies>"}]," 由上至下睇，列喺較上面既係優先）。"]}],"\n"]}],"\n",["$","p",null,{"children":"例子："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["獨立例子一","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地既項目 ",["$","code",null,{"children":"MyLib"}]," 有 ",["$","code",null,{"children":"2"}]," 個 direct dependencies，分別係 ",["$","code",null,{"children":"Alice"}]," 以及 ",["$","code",null,{"children":"Bob"}],"（相同次序）。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Alice 2.0"}]," ➜ ",["$","code",null,{"children":"Bob 2.0"}]," ➜ ",["$","code",null,{"children":"Charlie 2.0"}]]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Bob 1.0"}]," ➜ ",["$","code",null,{"children":"Charlie 1.0"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["結果係 Maven 最終會揀 ",["$","code",null,{"children":"Charlie 1.0"}],"，因為 ",["$","code",null,{"children":"Charlie 1.0"}]," 最接近我地既項目。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["獨立例子二","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地既項目 ",["$","code",null,{"children":"MyLib"}]," 有 ",["$","code",null,{"children":"2"}]," 個 direct dependencies，分別係 ",["$","code",null,{"children":"Alice"}]," 以及 ",["$","code",null,{"children":"Bob"}],"（相同次序）。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Alice 1.0"}]," ➜ ",["$","code",null,{"children":"Charlie 1.0"}]]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Bob 2.0"}]," ➜ ",["$","code",null,{"children":"Charlie 2.0"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["結果係 Maven 最終會揀 ",["$","code",null,{"children":"Charlie 1.0"}],"，因為兩個 ",["$","code",null,{"children":"Charlie"}]," 既 dependency declarations 同我地項目有相同既距離，而 ",["$","code",null,{"children":"Charlie 1.0"}]," 係較先 declare。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"（上面以「➜」表示 direct dependency。）"}],"\n",["$","p",null,{"children":"當我地明白左「距離」既原理之後，我地就會知道點解："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"當我地想將我地既 Maven 項目用到既某啲 transitive dependencies 既版本號碼升級，我地會將呢啲 dependencies 連同特定既版本號碼直接 declare 喺我地項目之下作為一個 direct dependency，簡單咁做到覆蓋版本號碼既效果。"}],"\n",["$","li",null,{"children":"有啲情況下，當我地移動左我地既 Maven 項目既 direct dependencies 既次序之後，我地個程式既 behaviors 會唔同左，咁應該係因為某啲 transitive dependencies 既版本號碼改變左。"}],"\n"]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Maven 係唔會理版本號碼本身既值。佢唔會因為一個版本號碼 lexicographically 大過另一個就揀大啲果個。"}],"\n"]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#transitive-dependencies","children":"Maven 官方文檔 - Introduction to the Dependency Mechanism - Transitive Dependencies"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://reflectoring.io/maven-bom/#how-does-maven-resolve-version-conflicts","children":"Using Maven’s Bill of Materials (BOM) - How Does Maven Resolve Version Conflicts?"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 Maven Shade Plugin"}],"\n",["$","p",null,{"children":["Maven 項目既 ",["$","code",null,{"children":"pom.xml"}]," 既默認 packaging type 係 ",["$","code",null,{"children":"jar"}],"，而喺默認情況下，",["$","code",null,{"children":"maven-jar-plugin"}]," 喺 build 我地既 JAR 檔既時候："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["佢只會將我地既 Maven 項目裡面既 Java bytecode ",["$","code",null,{"children":".class"}]," 檔抄入去。"]}],"\n",["$","li",null,{"children":["我地既 Maven 項目既所有 dependencies 以及 transitive dependencies 既資訊只會以一個 POM XML 檔既形式存在，而佢地既 Java bytecode ",["$","code",null,{"children":".class"}]," 檔係唔會被抄入去最終既 JAR 檔裡面，原因係要避免重複打包呢啲檔案。"]}],"\n"]}],"\n",["$","p",null,{"children":"喺少數情況下，我地既 Maven 項目用到既 dependencies 之間可能會出現唔兼容既情況，而唔兼容既原因係佢地一定既 implementations 只係兼容特定版本號碼既 dependencies。"}],"\n",["$","p",null,{"children":"舉個獨立既例子："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地既項目 ",["$","code",null,{"children":"MyLib"}]," 有 ",["$","code",null,{"children":"2"}]," 個 direct dependencies，分別係 ",["$","code",null,{"children":"Alice"}]," 以及 ",["$","code",null,{"children":"Bob"}],"（依次序）。","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Alice 1.0"}]," ➜ ",["$","code",null,{"children":"Charlie 1.0"}]]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"MyLib 1.0"}]," ➜ ",["$","code",null,{"children":"Bob 2.0"}]," ➜ ",["$","code",null,{"children":"Charlie 2.0"}]]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["根據我地對 Maven 揀選 transitive dependency 版本號碼既理解，我地知道 Maven 最終會揀 ",["$","code",null,{"children":"Charlie 1.0"}],"。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"Charlie 2.0"}]," introduce 左 breaking changes，佢好多野都同 ",["$","code",null,{"children":"Charlie 1.0"}]," 有差異。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["差異既例子","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Classes、enums、annotations 等等既野有增減。"}],"\n",["$","li",null,{"children":"Classes 既 method signatures 或者 enums、annotations 等等既野裡面既內容有增減。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["因為呢個原因，",["$","code",null,{"children":"Alice 1.0"}]," 同 ",["$","code",null,{"children":"Charlie 1.0"}]," 兼容，但係同 ",["$","code",null,{"children":"Charlie 2.0"}]," 唔兼容。"]}],"\n",["$","li",null,{"children":["因為呢個原因，",["$","code",null,{"children":"Bob 2.0"}]," 同 ",["$","code",null,{"children":"Charlie 2.0"}]," 兼容，但係同 ",["$","code",null,{"children":"Charlie 1.0"}]," 唔兼容。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["其實無論 Maven 最終揀左邊個版本號碼既 ",["$","code",null,{"children":"Charlie"}]," 都好，我地個程式都會存在住 runtime errors（例如 ",["$","code",null,{"children":"NoSuchMethodError"}],"），導致我地既程式冇辦法執行。"]}],"\n",["$","p",null,{"children":["為左解決呢個問題，我地可以用 ",["$","code",null,{"children":"maven-shade-plugin"}]," 去修改 dependency libraries 既 classes，然後打包成岩用既新 libraries。"]}],"\n",["$","h2",null,{"children":"2.1 簡單既例子"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"com.michael:charlie:1.0"}]," 既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面冇任何 dependency，亦冇任何 build plugin。"]}],"\n",["$","li",null,{"children":["只有一個 class：",["$","code",null,{"children":"src/main/java/com/charlie/Calculator.java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class Calculator {\r\n\tpublic int sum(int a, int b) { return a + b; }\r\n}\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"com.michael:charlie:2.0"}]," 既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面冇任何 dependency，亦冇任何 build plugin。"]}],"\n",["$","li",null,{"children":["只有一個 class：",["$","code",null,{"children":"src/main/java/com/charlie/Calculator.java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class Calculator {\r\n\tpublic int sum(int a, int b, int c) { return a + b + c; }\r\n}\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"com.michael:alice:1.0"}]," 既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面只有一個 ",["$","code",null,{"children":"com.michael:charlie:1.0"}]," 既 dependency，冇任何 build plugin。"]}],"\n",["$","li",null,{"children":["只有一個 class：",["$","code",null,{"children":"src/main/java/com/alice/AliceCalculator.java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class AliceCalculator {\r\n\tpublic int sum(int a, int b) { return new Calculator().sum(a, b); }\r\n}\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"com.michael:bob:2.0"}]," 既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面只有一個 ",["$","code",null,{"children":"com.michael:charlie:2.0"}]," 既 dependency，冇任何 build plugin。"]}],"\n",["$","li",null,{"children":["只有一個 class：",["$","code",null,{"children":"src/main/java/com/bob/BobCalculator.java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class BobCalculator {\r\n\tpublic int sum(int a, int b, int c) { return new Calculator().sum(a, b, c); }\r\n}\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"com.michael:my-lib:1.0"}]," 既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面有 ",["$","code",null,{"children":"com.michael:alice:1.0"}]," 以及 ",["$","code",null,{"children":"com.michael:bob:2.0"}]," 既 dependencies（次序有影響，但喺呢個例子冇所謂），同埋一個 ",["$","code",null,{"children":"spring-boot-maven-plugin"}]," 既 build plugin。"]}],"\n",["$","li",null,{"children":["只有一個 class：",["$","code",null,{"children":"src/main/java/code/Main.java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(new AliceCalculator().sum(1, 2) + new BobCalculator().sum(1, 2, 3));\r\n\t}\r\n}\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"喺呢個例子裡面："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地有 ",["$","code",null,{"children":"2"}]," 個唔同版本既 ",["$","code",null,{"children":"com.charlie.Calculator"}]," class，佢地既 ",["$","code",null,{"children":"sum"}]," methods 既 signatures 有分別。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"my-lib 1.0"}]," 有需要同時用到 ",["$","code",null,{"children":"2"}]," 個版本既 ",["$","code",null,{"children":"charlie"}]," library 作為 transitive dependencies。"]}],"\n"]}],"\n",["$","p",null,{"children":"不過呢度就衍生左一啲問題："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"當有多過一個 Java class 既 fully qualified class names 係一樣既時候，JVM 喺一個 class loader object 裡面只會 load 其中一個版本既 class。"}],"\n",["$","li",null,{"children":["Maven 唔容許喺一個項目裡面相同 ",["$","code",null,{"children":"groupId"}]," 以及 ",["$","code",null,{"children":"artifactId"}]," 既 transitive dependency 存在多個版本。"]}],"\n"]}],"\n",["$","p",null,{"children":"詳細解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"my-lib 1.0"}]," depends on ",["$","code",null,{"children":"alice 1.0"}]," 以及 ",["$","code",null,{"children":"bob 2.0"}],"，而佢地各自 depends on 唔同版本既 ",["$","code",null,{"children":"charlie"}]," transitive dependency。"]}],"\n",["$","li",null,{"children":["視乎佢地喺 ",["$","code",null,{"children":"my-lib 1.0"}]," 既 ",["$","code",null,{"children":"pom.xml"}]," 既 ",["$","code",null,{"children":"<dependencies>"}]," 裡面既次序，Maven 就會揀佢地其中一個作為 ",["$","code",null,{"children":"my-lib 1.0"}]," 既 transitive dependency。"]}],"\n",["$","li",null,{"children":["不過，既然 classpath 只能存在一個版本既 ",["$","code",null,{"children":"charlie"}],"，咁就會導致 ",["$","code",null,{"children":"my-lib 1.0"}]," 缺少左其中一個版本既 ",["$","code",null,{"children":"Calculator"}]," class，最終導致 ",["$","code",null,{"children":"AliceCalculator"}]," 或者 ",["$","code",null,{"children":"BobCalculator"}]," 其中一個 class 出現 ",["$","code",null,{"children":"NoSuchMethodError"}]," runtime error。"]}],"\n"]}],"\n",["$","p",null,{"children":["如果 ",["$","code",null,{"children":"my-lib 1.0"}]," 既 ",["$","code",null,{"children":"<dependencies>"}]," 係 ",["$","code",null,{"children":"alice 1.0"}]," 然後 ",["$","code",null,{"children":"bob 2.0"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"Exception in thread \"main\" java.lang.NoSuchMethodError: 'int com.charlie.Calculator.sum(int, int, int)'\r\n\tat com.bob.BobCalculator.sum(BobCalculator.java:8)\r\n\tat code.Main.main(Main.java:9)\n"}]}],"\n",["$","p",null,{"children":["如果 ",["$","code",null,{"children":"my-lib 1.0"}]," 既 ",["$","code",null,{"children":"<dependencies>"}]," 係 ",["$","code",null,{"children":"bob 2.0"}]," 然後 ",["$","code",null,{"children":"alice 1.0"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"Exception in thread \"main\" java.lang.NoSuchMethodError: 'int com.charlie.Calculator.sum(int, int)'\r\n\tat com.alice.AliceCalculator.sum(AliceCalculator.java:8)\r\n\tat code.Main.main(Main.java:9)\n"}]}],"\n",["$","p",null,{"children":["要解決呢個問題，我地可以 shade ",["$","code",null,{"children":"alice 1.0"}]," 或者 ",["$","code",null,{"children":"bob 2.0"}],"，甚至 shade 曬佢地。"]}],"\n",["$","p",null,{"children":["要 shade ",["$","code",null,{"children":"alice 1.0"}],"，我地需要創建一個 ",["$","code",null,{"children":"com.michael:alice-shaded:1.0"}]," 既 library，而佢既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面只有一個 ",["$","code",null,{"children":"com.michael:alice:1.0"}]," 既 dependency，同埋一個 ",["$","code",null,{"children":"maven-shade-plugin"}]," 既 build plugin。"]}],"\n",["$","li",null,{"children":["可以唔需要 ",["$","code",null,{"children":"src"}]," folder。"]}],"\n"]}],"\n",["$","p",null,{"children":["要 shade ",["$","code",null,{"children":"bob 2.0"}],"，我地需要創建一個 ",["$","code",null,{"children":"com.michael:bob-shaded:2.0"}]," 既 library，而佢既 project setup："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"pom.xml"}]," 裡面只有一個 ",["$","code",null,{"children":"com.michael:bob:2.0"}]," 既 dependency，同埋一個 ",["$","code",null,{"children":"maven-shade-plugin"}]," 既 build plugin。"]}],"\n",["$","li",null,{"children":["可以唔需要 ",["$","code",null,{"children":"src"}]," folder。"]}],"\n"]}],"\n",["$","p",null,{"children":["以下係 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 既 ",["$","code",null,{"children":"pom.xml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"$f"}]}],"\n",["$","p",null,{"children":["至於 ",["$","code",null,{"children":"bob-shaded 2.0"}],"，佢既 ",["$","code",null,{"children":"pom.xml"}]," 就同上面 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 既 ",["$","code",null,{"children":"pom.xml"}]," 基本上一樣，我地只需要將所有 ",["$","code",null,{"children":"alice"}]," 既字眼換成 ",["$","code",null,{"children":"bob"}],"，將版本號碼改成 ",["$","code",null,{"children":"2.0"}],"。"]}],"\n",["$","p",null,{"children":"建立好呢兩個 Maven 項目之後，"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["我地要將 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 以及 ",["$","code",null,{"children":"aob-shaded 2.0"}]," build 到 Maven repository。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["想快速測試既話可以先 ",["$","code",null,{"children":"mvn install"}]," 到本地 Maven repository。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["我地要將 ",["$","code",null,{"children":"my-lib 1.0"}]," 既兩個 dependencies 換成呢兩個 shade 左既版本。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地會見到 ",["$","code",null,{"children":"my-lib 1.0"}]," 而家唔再有 ",["$","code",null,{"children":"charlie"}]," 既 transitive dependency。"]}],"\n",["$","li",null,{"children":["我地而家會有 ",["$","code",null,{"children":"com.alice.Calculator"}]," 以及 ",["$","code",null,{"children":"com.bob.Calculator"}]," 兩個唔同 packages 既 classes，佢地係對應原先唔同版本既 ",["$","code",null,{"children":"com.charlie.Calculator"}]," class。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["當我地執行 ",["$","code",null,{"children":"my-lib"}]," 既 ",["$","code",null,{"children":"Main"}]," class 既時候，就會見到 console print ",["$","code",null,{"children":"9"}],"（即係 ",["$","code",null,{"children":"(1 + 2) + (1 + 2 + 3)"}]," 既結果）。"]}],"\n"]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"mvn package"}]," 或者 ",["$","code",null,{"children":"mvn install"}]," 之後會見到 project root folder 多左個 ",["$","code",null,{"children":"dependency-reduced-pom.xml"}]," 檔，佢係 ",["$","code",null,{"children":"maven-shade-plugin"}]," 根據配置而修改出黎既 POM 檔。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"maven-shade-plugin"}]," 會將已經 shade 左入 JAR artifact 既 dependencies 喺 POM 度變成 ",["$","code",null,{"children":"provided"}]," scope。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["根據 Maven，",["$","code",null,{"children":"provided"}]," scope 既 dependencies 唔係 transitive，所以就算佢地存在喺 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 以及 ",["$","code",null,{"children":"bob-shaded 2.0"}]," 既 POM 檔，我地都唔洗擔心 ",["$","code",null,{"children":"my-lib 1.0"}]," 會有佢地（亦唔洗擔心 ",["$","code",null,{"children":"spring-boot-maven-plugin"}]," 既奇怪邏輯會將 ",["$","code",null,{"children":"provided"}]," scope 既 dependencies 以及佢地帶黎既 transitive dependencies 包含喺 nested JAR artifact 裡面）。"]}],"\n",["$","li",null,{"children":["但如果我地都想佢地唔存在喺 POM 檔，可以用 ",["$","code",null,{"children":"keepDependenciesWithProvidedScope"}]," = ",["$","code",null,{"children":"false"}]," 既配置黎移除佢地。"]}],"\n",["$","li",null,{"children":["如果 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 以及 ",["$","code",null,{"children":"bob-shaded 2.0"}]," 既 parent POM 係 ",["$","code",null,{"children":"spring-boot-starter-parent"}]," 既話，咁就會 inherit 左佢 ",["$","code",null,{"children":"<build>"}]," section 既 ",["$","code",null,{"children":"<pluginManagement>"}]," 去用 ",["$","code",null,{"children":"keepDependenciesWithProvidedScope"}]," = ",["$","code",null,{"children":"true"}]," 作為 ",["$","code",null,{"children":"maven-shade-plugin"}]," 既默認配置。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["如果 ",["$","code",null,{"children":"charlie"}],"、",["$","code",null,{"children":"alice"}]," 或者 ",["$","code",null,{"children":"bob"}]," 有 dependencies，咁 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 以及 ",["$","code",null,{"children":"bob-shaded 2.0"}]," 就要用到 ",["$","code",null,{"children":"promoteTransitiveDependencies"}]," = ",["$","code",null,{"children":"true"}]," 既配置，去令 ",["$","code",null,{"children":"alice 1.0"}]," 以及 ",["$","code",null,{"children":"bob 2.0"}]," 既 dependencies 以及所有帶黎既 transitive dependencies 直接寫喺 ",["$","code",null,{"children":"alice-shaded 1.0"}]," 以及 ",["$","code",null,{"children":"bob-shaded 2.0"}]," 既 POM 檔裡面。"]}],"\n",["$","li",null,{"children":["喺 ",["$","code",null,{"children":"<artifactSet>"}]," 裡面，我地喺 ",["$","code",null,{"children":"<includes>"}]," 度指定左只會 shade ",["$","code",null,{"children":"com.michael:charlie"}]," 以及 ",["$","code",null,{"children":"com.michael:alice"}],"，而默認係會 shade 全部 dependencies。"]}],"\n",["$","li",null,{"children":["喺 ",["$","code",null,{"children":"<relocations>"}]," 裡面，我地針對 ",["$","code",null,{"children":"com.charlie.*"}]," packages 既所有 classes，將佢地 package 名既 ",["$","code",null,{"children":"com.charlie"}]," relocate 成 ",["$","code",null,{"children":"com.alice"}],"（或者 ",["$","code",null,{"children":"com.bob"}],"），再 shade 佢地入 JAR artifact 裡面。"]}],"\n"]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://maven.apache.org/plugins/maven-shade-plugin/examples/class-relocation.html","children":"Maven 官方文檔 - Maven Shade Plugin - Relocating Classes"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 Maven profiles"}],"\n",["$","p",null,{"children":["Spring Boot 可以畀我地用唔同 profiles 既 YAML 或者 Java Properties 檔案作為配置檔，但係如果我地將本地開發既 ",["$","code",null,{"children":"application-local.yml"}]," 或者 ",["$","code",null,{"children":"application-local.properties"}]," 檔放左落 ",["$","code",null,{"children":"src/main/resources"}]," 裡面，Maven CLI 打包出黎既 JAR 檔裡面就會包括埋呢啲本地開發用既檔案。"]}],"\n",["$","p",null,{"children":"一個比較有系統既做法係用 Maven profiles："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"我地可以喺 Eclipse IDE 裡面揀我地想用既 Maven profile 去 build 個 Maven project。"}],"\n",["$","li",null,{"children":"我地可以用 Maven CLI 指定 Maven profile 去 build 或者 run 我地個 Maven project。"}],"\n",["$","li",null,{"children":"只要有 set 岩默認既 Maven profile，同埋啲檔案完全分開擺放，咁呢個方法就唔會影響到 production build。"}],"\n"]}],"\n",["$","p",null,{"children":"下面係 Maven profiles 既其中一個用法："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<project>\r\n\r\n\t<!-- 一般 project metadata -->\r\n\r\n\t<!-- properties -->\r\n\r\n\t<!-- parent POM -->\r\n\r\n\t<!-- dependencyManagement -->\r\n\r\n\t<!-- dependencies -->\r\n\r\n\t<!-- build -->\r\n\r\n\t<profiles>\r\n\t\t<profile>\r\n\t\t\t<id>local</id>\r\n\t\t\t<build>\r\n\t\t\t\t<resources>\r\n\t\t\t\t\t<resource>\r\n\t\t\t\t\t\t<directory>src/main/resources/local</directory>\r\n\t\t\t\t\t</resource>\r\n\t\t\t\t</resources>\r\n\t\t\t</build>\r\n\t\t\t<dependencies>\r\n\t\t\t\t<dependency>\r\n\t\t\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t\t</dependency>\r\n\t\t\t</dependencies>\r\n\t\t</profile>\r\n\r\n\t\t<profile>\r\n\t\t\t<id>cloud</id>\r\n\t\t\t<activation>\r\n\t\t\t\t<activeByDefault>true</activeByDefault>\r\n\t\t\t</activation>\r\n\t\t\t<build>\r\n\t\t\t\t<resources>\r\n\t\t\t\t\t<resource>\r\n\t\t\t\t\t\t<directory>src/main/resources/cloud</directory>\r\n\t\t\t\t\t</resource>\r\n\t\t\t\t</resources>\r\n\t\t\t</build>\r\n\t\t\t<dependencies>\r\n\t\t\t\t<dependency>\r\n\t\t\t\t\t<groupId>com.microsoft.sqlserver</groupId>\r\n\t\t\t\t\t<artifactId>mssql-jdbc</artifactId>\r\n\t\t\t\t</dependency>\r\n\t\t\t</dependencies>\r\n\t\t</profile>\r\n\t</profiles>\r\n\r\n</project>\n"}]}],"\n",["$","p",null,{"children":["然後可以喺 ",["$","code",null,{"children":"src/main/resources/local"}]," 以及 ",["$","code",null,{"children":"src/main/resources/cloud"}]," 既 folders 裡面放帶有唔同配置既 ",["$","code",null,{"children":"application.yml"}],"、",["$","code",null,{"children":"logback.xml"}]," 等等。"]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"工具"}],["$","th",null,{"children":"指定 Maven profile 既方式"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"Eclipse IDE"}],["$","td",null,{"children":"Right click 個 project > Maven > Select Maven Profiles..."}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Maven CLI"}],["$","td",null,{"children":["用 ",["$","code",null,{"children":"-P"}]," 既 CLI option，例如 ",["$","code",null,{"children":"mvn clean package -P cloud"}],"、",["$","code",null,{"children":"mvn clean spring-boot:run -P local"}]]}]]}]]}]]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","sTyZBBCkMXciXsrDJm70z",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
