1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
11:I[6213,[],"OutletBoundary"]
13:I[6213,[],"MetadataBoundary"]
15:I[6213,[],"ViewportBoundary"]
17:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T64b,spring:
    cloud:
        function: # 新式 function 做法
            definition: supplyBinding;consumeBinding # 注意：supplyBinding 會每秒發送訊息

        stream:
            binders:
                testBinder1:
                    type: servicebus
                    environment:
                        spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic
                testBinder2:
                    type: servicebus
                    environment:
                        spring.cloud.azure.servicebus.connection-string: Endpoint=sb://xxxxxx.servicebus.windows.net/;SharedAccessKeyName=my-test-topic-policy;SharedAccessKey=xxxxxx;EntityPath=my-test-topic

            bindings:
                supplyBinding-out-0:
                    destination: my-test-topic
                    binder: testBinder1
                consumeBinding-in-0:
                    destination: my-test-topic
                    group: my-test-subscription
                    binder: testBinder2

            servicebus:
                bindings:
                    supplyBinding-out-0:
                        producer:
                            requeue-rejected: true
                            entity-type: topic
                    consumeBinding-in-0:
                        consumer:
                            requeue-rejected: true
                            auto-complete: true
                            entity-type: topic
10:T63c,spring:
    cloud:
        stream:
            binders:
                testBinder1:
                    type: servicebus
                    environment:
                        spring.cloud.azure.servicebus.connection-string: Endpoint=sb://dummy.servicebus.windows.net/;SharedAccessKeyName=dummy;SharedAccessKey=dummy # 用 dummy connection string，唔需要 EntityPath（有既話就要 match 返 binding 既 destination）
                testBinder2:
                    type: servicebus
                    environment:
                        spring.cloud.azure.servicebus.connection-string: Endpoint=sb://dummy.servicebus.windows.net/;SharedAccessKeyName=dummy;SharedAccessKey=dummy # 用 dummy connection string，唔需要 EntityPath（有既話就要 match 返 binding 既 destination）

            bindings:
                supplyBinding-out-0:
                    destination: my-test-topic
                    binder: testBinder1
                consumeBinding-in-0:
                    destination: my-test-topic
                    group: my-test-subscription
                    binder: testBinder2

            servicebus:
                bindings:
                    supplyBinding-out-0:
                        producer:
                            requeue-rejected: true
                            entity-type: topic
                    consumeBinding-in-0:
                        consumer:
                            requeue-rejected: true
                            auto-complete: true
                            entity-type: topic
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","spring-azure-service-bus"],"i":false,"f":[[["",{"children":["blog",{"children":["(2023-04)",{"children":["spring-azure-service-bus",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2023-04)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2023-04)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["spring-azure-service-bus",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2023-04)","children","spring-azure-service-bus","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Azure Service Bus 簡介"}],"\n",["$","p",null,{"children":"Microsoft 既 Azure Service Bus（ASB）係一個 message broker 既雲服務，係用黎畀唔同既微服務之間進行異步既溝通（asynchronous communication）。佢同 RabbitMQ 以及 Kafka 相類似。"}],"\n",["$","p",null,{"children":"負責發布訊息既微服務會將文字訊息發送到 ASB，然後 ASB 會暫時儲存住呢啲訊息，而訂閱左呢個 ASB 既微服務稍後就會收到訊息。當訂閱方成功接收到訊息，ASB 就會移除呢啲已經傳送既訊息。"}],"\n",["$","h2",null,{"children":"1.1 Messaging entities 概念"}],"\n",["$","p",null,{"children":"ASB 有以下既 messaging entities："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Messaging entity"}],["$","th",null,{"children":"描述"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Queue"}],["$","td",null,{"children":"一條隊列，可以係一個訊息發送對象。任意數量既發布方、任意數量既訂閱方都可以使用同一條隊列收發訊息。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Topic、subscriptions"}],["$","td",null,{"children":"Topic 係一個訊息發送對象，任意數量既發送方都可以發送訊息到同一個 topic；而 subscriptions 係隸屬於 topic，我地可以視佢地為 queues。當個 topic 收到訊息，佢既所有 subscriptions 都會收到同一個訊息。發布方只會將訊息發送到 topic，唔會知道 subscriptions 既存在。一個 topic 可以有任意數量既 subscriptions。視乎需要，任意數量既訂閱方可能會使用同一個 subscription，咁就相等於 consumer group 既概念，係 competing consumers，而同一個訊息只會有一個訂閱方既微服務收到；另一個情況係各自使用獨立既 subscription，咁同一個訊息所有訂閱方既微服務都會收到。"}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 動手寫"}],"\n",["$","h2",null,{"children":"2.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<parent>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t<version>3.1.2</version>\r\n</parent>\r\n\r\n<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>2022.0.3</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>com.azure.spring</groupId>\r\n\t\t<artifactId>spring-cloud-azure-stream-binder-servicebus</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.apache.commons</groupId>\r\n\t\t<artifactId>commons-lang3</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.projectlombok</groupId>\r\n\t\t<artifactId>lombok</artifactId>\r\n\t\t<scope>provided</scope>\r\n\t</dependency>\r\n</dependencies>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 Java code"}],"\n",["$","h3",null,{"children":"2.2.1 新式 function 做法"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/config"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MessageConfig.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/controller"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"SampleController.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MessageConfig.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@Configuration\r\npublic class MessageConfig {\r\n\r\n    // 每秒發送訊息\r\n    @Bean\r\n    public Supplier<String> supplyBinding() {\r\n        return () -> {\r\n            final String dateTime = LocalDateTime.now(ZoneId.of(\"Hongkong\")).format(DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm:ss\"));\r\n            final String message = String.format(\"Test msg - %s (%s)\", RandomStringUtils.randomAlphanumeric(8), dateTime);\r\n            log.info(\"Sending message: {}\", message);\r\n            return message;\r\n        };\r\n    }\r\n\r\n    @Bean\r\n    public Consumer<String> consumeBinding() {\r\n        return message -> {\r\n            log.info(\"Successfully received message: {}\", message);\r\n        };\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"SampleController.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@RestController\r\npublic class SampleController {\r\n\r\n    @Autowired\r\n    StreamBridge streamBridge;\r\n\r\n    @GetMapping(\"/test/{value}\")\r\n    public ResponseEntity<String> testSend(@PathVariable(\"value\") String value) {\r\n        log.info(\"Sending value {} to topic\", value);\r\n        streamBridge.send(\"supplyBinding-out-0\", value);\r\n        return ResponseEntity.ok(\"ok\");\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.2 舊式 annotation 做法"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/config"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MessageBinding.java"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"MessageConfig.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/controller"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"SampleController.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MessageBinding.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public interface MessageBinding {\r\n\r\n    @Output(\"supplyBinding-out-0\")\r\n    MessageChannel supplyBinding();\r\n\r\n    @Input(\"consumeBinding-in-0\")\r\n    SubscribableChannel consumeBinding();\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MessageConfig.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@EnableBinding(MessageBinding.class)\r\npublic class MessageConfig {\r\n\r\n    @Autowired\r\n    MessageBinding messageBinding;\r\n\r\n    @StreamListener(\"consumeBinding-in-0\")\r\n    public void consumeBinding(String msg) {\r\n        log.info(\"Successfully received message: {}\", msg);\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"SampleController.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@RestController\r\n@EnableBinding(MessageBinding.class)\r\npublic class SampleController {\r\n\r\n    @Autowired\r\n    MessageBinding messageBinding;\r\n\r\n    @GetMapping(\"/test/{value}\")\r\n    public ResponseEntity<String> testSend(@PathVariable(\"value\") String value) throws Exception {\r\n        log.info(\"Sending message: {}\", value);\r\n        publish(value);\r\n        return ResponseEntity.ok(\"ok\");\r\n    }\r\n\r\n    private void publish(String msg) throws Exception {\r\n\r\n        log.info(\"Start publishing message: {}\", msg);\r\n\r\n        try {\r\n            if (!messageBinding.supplyBinding().send(MessageBuilder.withPayload(msg).build(), 30_000L)) {\r\n                log.error(\"Failed to publish message. send() returns false.\");\r\n                throw new Exception(\"Failed to publish message.\");\r\n            }\r\n\r\n            log.info(\"Successfully published message.\");\r\n        } catch (Exception e) {\r\n            log.error(\"Failed to publish message.\", e);\r\n            throw e;\r\n        }\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.3 Application 配置"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"$f"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 已知問題"}],"\n",["$","h2",null,{"children":"3.1 方括號包圍 message 導致既 bug"}],"\n",["$","p",null,{"children":"當我地用以下 Java code 去發送訊息："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"streamBridge.send(\"supply-out-0\", \"[hello world]\");\r\nstreamBridge.send(\"supply-out-0\", (Object) \"[hello world]\", MediaType.TEXT_PLAIN);\n"}]}],"\n",["$","p",null,{"children":"就會導致以下呢個 exception："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"java.lang.IllegalStateException: Failed to convert. Possible bug as the conversion probably shouldn't have been attampted here\r\n    at org.springframework.cloud.function.json.JacksonMapper.doFromJson(JacksonMapper.java:70)\r\n    at org.springframework.cloud.function.json.JsonMapper.fromJson(JsonMapper.java:94)\n"}]}],"\n",["$","p",null,{"children":"所以我地要注意 Spring framework 可能會針對某啲格式而去做轉換。"}],"\n",["$","p",null,{"children":"參考："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://stackoverflow.com/questions/75371351/how-to-use-streambridge-to-send-string-message-and-bypass-message-conversion","children":"How to use StreamBridge to send String message and bypass message conversion?"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 升級 Spring Cloud Stream 4.0.2 既舊配置問題"}],"\n",["$","p",null,{"children":["Spring Cloud Stream ",["$","code",null,{"children":"4.x"}]," 適用於 Spring Boot ",["$","code",null,{"children":"3.x"}]," 以及 Spring Cloud ",["$","code",null,{"children":"2022.x"}],"。"]}],"\n",["$","p",null,{"children":"以下呢個配置黎自 Microsoft 文檔："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    cloud:\r\n        stream:\r\n            function:\r\n                definition: supplyBinding;consumeBinding\n"}]}],"\n",["$","p",null,{"children":["參考：",["$","a",null,{"href":"https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/spring-cloud-stream-support?tabs=SpringCloudAzure5x#sending-and-receiving-messages-fromto-service-bus","children":"Microsoft 官方文檔 - Sending and receiving messages from/to Service Bus"}]]}],"\n",["$","p",null,{"children":"根據 Spring team 既開發者 Oleg Zhurakousky 以及 Soby Chacko 所講，其實呢個配置已經 deprecated 左好耐，甚至乎係出左冇耐就 deprecated，而家已經 remove 左，取而代之既係："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    cloud:\r\n        function:\r\n            definition: supplyBinding;consumeBinding\n"}]}],"\n",["$","p",null,{"children":"參考："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://github.com/spring-cloud/spring-cloud-stream/issues/2360#issuecomment-1106510116","children":"GitHub - spring-cloud/spring-cloud-stream - #2360"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://github.com/spring-cloud/spring-cloud-stream/issues/2680","children":"GitHub - spring-cloud/spring-cloud-stream - #2680"}]}],"\n"]}],"\n",["$","p",null,{"children":["否則，當我地升級 ",["$","code",null,{"children":"spring-cloud-stream"}]," 去 ",["$","code",null,{"children":"4.0.2"}],"，就會出現呢個 ",["$","code",null,{"children":"WARN"}]," log，而個 Spring application 亦唔會識得接收或者發送訊息。"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"Multiple functional beans were found [consume, supply], thus can't determine default function definition. Please use 'spring.cloud.function.definition' property to explicitly define it.\n"}]}],"\n",["$","p",null,{"children":["Class：",["$","code",null,{"children":"BeanFactoryAwareFunctionRegistry"}],"（黎自 ",["$","code",null,{"children":"spring-cloud-function-context 4.0.2"}],"）"]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"spring-cloud-stream 4.0.1"}]," 冇呢個問題，係 ",["$","code",null,{"children":"spring-cloud-stream 4.0.2"}]," 先有。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 Unit test"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"ControllerTest"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultHandlers.log;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r\n\r\n@SpringBootTest\r\n@RunWith(SpringRunner.class)\r\n@AutoConfigureMockMvc\r\npublic class ControllerTest {\r\n\r\n    @Autowired MockMvc mvc;\r\n\r\n    @Autowired SampleController controller;\r\n    @Autowired MessageService service;\r\n\r\n    @Test\r\n    public void test_context() {\r\n        assertNotNull(controller);\r\n        assertNotNull(service);\r\n    }\r\n\r\n    @Test\r\n    public void test_getHttp() throws Exception {\r\n        mvc.perform(get(\"/test/dummy\"))\r\n           .andDo(log())\r\n           .andExpect(status().isOk());\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"src/test/resources/application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"$10"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-queues-topics-subscriptions","children":"Microsoft 官方文檔 - Service Bus queues, topics, and subscriptions"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://microsoft.github.io/spring-cloud-azure/current/reference/html/index.html#sending-and-receiving-messages-fromto-service-bus","children":"Spring Cloud Azure 官方文檔 - Sending and Receiving Messages from/to Service Bus"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/producing-and-consuming-messages.html#suppliers-sources","children":"Spring Cloud Stream 官方文檔 - Suppliers (Sources)"}]}],"\n"]}],"\n",["$","p",null,{"children":"其他："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://learn.microsoft.com/en-us/samples/azure/azure-sdk-for-java/servicebus-samples/","children":"Microsoft 官方文檔 - Azure Service Bus Samples client library for Java"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-java-how-to-use-topics-subscriptions","children":"Microsoft 官方文檔 - Send messages to an Azure Service Bus topic and receive messages from subscriptions to the topic (Java)"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-cloud-stream-binder-java-app-with-service-bus","children":"Microsoft 官方文檔 - Spring Cloud Stream with Azure Service Bus"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/servicebus/azure-messaging-servicebus/src/samples/java/com/azure/messaging/servicebus/SendMessageBatchSample.java","children":"GitHub - Azure/azure-sdk-for-java - SendMessageBatchSample"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://github.com/Azure/azure-sdk-for-java/wiki/Spring-Versions-Mapping","children":"GitHub - Azure/azure-sdk-for-java - Spring Versions Mapping - Spring Cloud Azure Support Status"}]}],"\n"]}]],null,["$","$L11",null,{"children":"$L12"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","0Iy14tAhgz-II02erpWH0",{"children":[["$","$L13",null,{"children":"$L14"}],["$","$L15",null,{"children":"$L16"}],null]}]]}],false]],"m":"$undefined","G":["$17","$undefined"],"s":false,"S":true}
16:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
14:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
12:null
