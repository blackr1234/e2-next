1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T7d4,@ECHO OFF

PUSHD zookeeper
START bin\windows\zookeeper-server-start.bat config\zookeeper.properties
POPD

TIMEOUT /NOBREAK /T 8

PUSHD broker-1
START bin\windows\kafka-server-start.bat config\server.properties
POPD

PUSHD broker-2
START bin\windows\kafka-server-start.bat config\server.properties
POPD

TIMEOUT /NOBREAK /T 8

PUSHD zookeeper
CALL bin\windows\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2
CALL bin\windows\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --list
CALL bin\windows\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --describe
POPD

START "Producer 1" producer-1\bin\windows\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"
START "Producer 2" producer-2\bin\windows\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator="|"

START "Group 1 - Consumer 1" consumer-1\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1
START "Group 1 - Consumer 2" consumer-2\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1
START "Group 2 - Consumer 1" consumer-3\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group2
START "Group 2 - Consumer 2" consumer-4\bin\windows\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group2

TIMEOUT /NOBREAK /T 8

PUSHD zookeeper
bin\windows\kafka-consumer-groups.bat --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups
POPD

PAUSE
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","kafka-cli"],"i":false,"f":[[["",{"children":["blog",{"children":["(2021-09)",{"children":["kafka-cli",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2021-09)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["kafka-cli",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2021-09)","children","kafka-cli","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Kafka 簡介"}],"\n",["$","p",null,{"children":"Microservices 之間除左即時、同步既溝通，有啲情況下用異步（async）既溝通就已經足夠。而 Kafka 係一個同時支援 message queue + publish-subscribe 既工具。"}],"\n",["$","p",null,{"children":["Kafka 既設計應用左 ",["$","code",null,{"children":"2"}]," 種 messaging 模式："]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"模式"}],["$","th",null,{"children":"描述（以 Kafka 術語）"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Publish-subscribe"}],["$","td",null,{"children":"每個訊息都會 broadcast 去所有 consumer groups。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Message queue"}],["$","td",null,{"children":["每個訊息喺每個 consumer group 都只會有 ",["$","code",null,{"children":"1"}]," 個 consumer 接收到。"]}]]}]]}]]}],"\n",["$","p",null,{"children":"Kafka 強大之處："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"高性能、高吞吐量"}],"\n",["$","li",null,{"children":"支援 broker horizontal scaling"}],"\n",["$","li",null,{"children":["支援 producer horizontal scaling","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"一個 topic 可以分成多個 partitions。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["支援 consumer horizontal scaling","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"多個 consumers 可以 form 成一個 consumer group。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":"作為一個 MQ，支援 consumer 重新啟動之後可以即時接收返斷線果陣 producer 所產生但又未被接收既訊息。"}],"\n"]}],"\n",["$","p",null,{"children":"註：Horizontal scaling 即係我地可以喺多過一部機器上面 deploy 一模一樣既 application，而呢啲機器以及 application 係唔知道其他機器既存在。咁做既目的係想避免有啲機器行行下突然 fail 左，影響業務。"}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 安裝 Kafka"}],"\n",["$","h2",null,{"children":"2.1 本地（免安裝）"}],"\n",["$","p",null,{"children":["$","a",null,{"href":"https://kafka.apache.org/downloads","children":"Kafka 官網 - Download"}]}],"\n",["$","p",null,{"children":["建議將 Kafka 既 binaries 解壓縮去 ",["$","code",null,{"children":"C:/"}],"，因為如果條 path 太長，行 command 果陣可能會有 error。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 Docker image"}],"\n",["$","h3",null,{"children":"2.2.1 ZooKeeper"}],"\n",["$","p",null,{"children":"可以選擇："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker image pull zookeeper\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker image pull wurstmeister/zookeeper\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker image pull confluentinc/cp-zookeeper\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.2 Kafka"}],"\n",["$","p",null,{"children":"可以選擇："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker image pull wurstmeister/kafka\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker image pull confluentinc/cp-kafka\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 Commands"}],"\n",["$","p",null,{"children":["Windows 版既 CLI 喺 ",["$","code",null,{"children":"bin/windows"}]," folder。"]}],"\n",["$","p",null,{"children":["如果想模擬到有多部機器同時運作，即係 horizontal scaling 既效果，穩陣啲可以用 Docker containers（保證獨立運行），而簡單啲既就可以複製成個 Kafka binaries 既 folder（不過其實複製啲 properties 檔已經足夠，因為啲數據檔案默認係儲存喺 ",["$","code",null,{"children":"/tmp"}],"（Windows 版就係 ",["$","code",null,{"children":"C:/tmp"}],"），而唔係儲存喺 Kafka 安裝檔既 folders 裡面）。"]}],"\n",["$","h2",null,{"children":"3.1 ZooKeeper"}],"\n",["$","h3",null,{"children":"3.1.1 啟動"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/zookeeper-server-start.sh config/zookeeper.properties\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\zookeeper-server-start.bat config\\zookeeper.properties\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 Kafka broker"}],"\n",["$","p",null,{"children":["想要模擬多部 broker 機器同時運作，就需要修改每個 broker 既 Kafka binaries 裡面既 ",["$","code",null,{"children":"config/server.properties"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"# 唔同既 broker 要 assign 唔同既 ID\r\nbroker.id=9\r\n\r\n# 唔同既 broker 要 assign 唔同既 port\r\nlisteners=PLAINTEXT://:9999\r\n\r\n# 唔同既 broker 要 assign 唔同既 log directory\r\nlog.dirs=/tmp/kafka-logs-9\n"}]}],"\n",["$","p",null,{"children":["我地會起 ",["$","code",null,{"children":"2"}],"個 brokers："]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Broker"}],["$","th",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"broker.id"}]}],["$","th",null,{"style":{"textAlign":"center"},"children":[["$","code",null,{"children":"listeners"}]," 既 port"]}],["$","th",null,{"children":["$","code",null,{"children":"log.dirs"}]}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"1"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"111"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"9991"}]}],["$","td",null,{"children":["$","code",null,{"children":"/tmp/kafka-logs-1"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"2"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"222"}]}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"9992"}]}],["$","td",null,{"children":["$","code",null,{"children":"/tmp/kafka-logs-2"}]}]]}]]}]]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Windows 既話都可以用上面既 log dir，啲 Kafka 數據會去左 ",["$","code",null,{"children":"C:/tmp"}],"。"]}],"\n",["$","li",null,{"children":["因為有啲 ",["$","code",null,{"children":"--describe"}]," 既 commands 會顯示數字（例如列出所有 topics 會顯示 leaders、replicas、in-sync replicas），果啲數字其實係 broker ID。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"所以為左容易啲分辨，broker ID 可以用長啲既數字（只可以用純數字）。"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"3.2.1 啟動"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-server-start.sh config/server.properties\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-server-start.bat config\\server.properties\n"}]}],"\n",["$","h3",null,{"children":"3.2.2 停止"}],"\n",["$","p",null,{"children":"想要停止 broker 既話，一定要 gracefully shutdown broker。"}],"\n",["$","p",null,{"children":["可以撳 ",["$","code",null,{"children":"Ctrl+C"}],"，佢會顯示 ",["$","code",null,{"children":"shut down completed"}],"。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.3 Topic"}],"\n",["$","h3",null,{"children":"3.3.1 建立新 topic"}],"\n",["$","p",null,{"children":["我地會起 ",["$","code",null,{"children":"1"}]," 個 topic，而呢個 topic 會有 ",["$","code",null,{"children":"2"}]," 個 partitions。"]}],"\n",["$","p",null,{"children":"我地可以喺個 ZooKeeper 度執行以下既 command："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --create --topic new-topic-name --partitions 2\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.3.2 列出所有 topics"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --list\r\nbin/kafka-topics.sh --bootstrap-server localhost:9991,localhost:9992 --describe\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --list\r\nbin\\windows\\kafka-topics.bat --bootstrap-server localhost:9991,localhost:9992 --describe\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.4 Kafka producer"}],"\n",["$","p",null,{"children":["Kafka 既 producer 係有 retry 機制，默認既 producer 配置下係會無限 retry 發送訊息，而必須注意既係，喺默認既 producer 配置下，",["$","code",null,{"children":"1"}]," 個 connection 最多可以有 ",["$","code",null,{"children":"5"}]," 個等待發送既訊息。而如果有發送失敗既情況，例如發送第一個訊息出去果陣失敗左，但係發送排喺後面既訊息成功左既話，呢個情況下就會令最終條 MQ 裡面既訊息既次序同本來唔同。所以有啲配置係好重要，一定要設定。"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"config/producer.properties"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"max.in.flight.requests.per.connection=1\n"}]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#retries","children":["Confluent - Producer Configurations - ",["$","code",null,{"children":"retries"}]]}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#max-in-flight-requests-per-connection","children":["Confluent - Producer Configurations - ",["$","code",null,{"children":"max.in.flight.requests.per.connection"}]]}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://blog.softwaremill.com/does-kafka-really-guarantee-the-order-of-messages-3ca849fd19d2","children":"Does Kafka really guarantee the order of messages?"}]}],"\n"]}],"\n",["$","h3",null,{"children":"3.4.1 發送訊息"}],"\n",["$","p",null,{"children":"Kafka 既訊息係 key-value pair。"}],"\n",["$","p",null,{"children":["如果訊息需要順次序，有 ",["$","code",null,{"children":"2"}]," 個方法，視乎情況而用："]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"場景"}],["$","th",null,{"children":"方法"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"所有訊息都要順次序。"}],["$","td",null,{"children":["每個 topic 只有 ",["$","code",null,{"children":"1"}]," 個 partition，而每個 consumer group 亦只需要 ",["$","code",null,{"children":"1"}]," 個 consumer。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"只需要相同業務 ID（例如用戶 ID）既訊息順次序。"}],["$","td",null,{"children":"每個 topic 可以有多個 partitions，但係每個訊息都要提供業務 ID（例如用戶 ID）作為 key，用黎計算應該落入邊個 partition。因為 producer partitioner 係用 hashing algorithm 黎計算，所以相同既 key 一定會落入相同既 partition。"}]]}]]}]]}],"\n",["$","p",null,{"children":"用下面既 command 就可以發送訊息："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-console-producer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator=\"|\"\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-console-producer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --property parse.key=true --property key.separator=\"|\"\n"}]}],"\n",["$","p",null,{"children":["之後輸入訊息內容，例如 ",["$","code",null,{"children":"1|foo"}],"、",["$","code",null,{"children":"2|bar"}],"，撳 ",["$","code",null,{"children":"Enter"}]," 掣可以立即發送訊息。想退出既話可以撳 ",["$","code",null,{"children":"Ctrl+C"}],"。"]}],"\n",["$","p",null,{"children":"我地可以喺 producer 度不停發送相同 key 既訊息，又夾雜下唔同 key 既訊息，睇下有冇出現同一個 key 既訊息畀每個 consumer group 裡面唔同既 consumers 接收既情況，但正常係唔會出現，因為 Kafka 保證相同 key 既訊息只會由每個 consumer group 裡面既同一個 consumer 接收，咁就保障到 message ordering。"}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"key.separator"}]," 默認係 tab。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"--property parse.key=true --property key.separator=\"|\""}]," 係用黎話畀 producer 知我地既訊息既 key、value 用 ",["$","code",null,{"children":"|"}]," 黎分隔。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["如果唔加上呢 ",["$","code",null,{"children":"2"}]," 個配置，咁訊息既 key 就會係 ",["$","code",null,{"children":"null"}],"，而 producer partitioner 會用 round-robin 既方式將訊息發送去某個 partition。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.5 Kafka consumer"}],"\n",["$","p",null,{"children":["我地會起 ",["$","code",null,{"children":"2"}]," 個 consumer groups，各有 ",["$","code",null,{"children":"2"}]," 個 consumers，總共 ",["$","code",null,{"children":"4"}]," 個 consumers。"]}],"\n",["$","p",null,{"children":"每個 consumer group 都會收到一樣的訊息，而同一個 consumer group 裡面既每個 consumer 都會收到 Kafka assign 畀佢對應既 partition 既訊息。"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Consumer"}],["$","th",null,{"style":{"textAlign":"center"},"children":"Group ID"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"1"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"group1"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"2"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"group1"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"3"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"group2"}]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"4"}],["$","td",null,{"style":{"textAlign":"center"},"children":["$","code",null,{"children":"group2"}]}]]}]]}]]}],"\n",["$","h3",null,{"children":"3.5.1 接收訊息"}],"\n",["$","p",null,{"children":["執行 ",["$","code",null,{"children":"4"}]," 次以下既 command："]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Consumer ",["$","code",null,{"children":"1"}]," 用 ",["$","code",null,{"children":"--consumer-property group.id=group1"}],"。"]}],"\n",["$","li",null,{"children":["Consumer ",["$","code",null,{"children":"2"}]," 用 ",["$","code",null,{"children":"--consumer-property group.id=group1"}],"。"]}],"\n",["$","li",null,{"children":["Consumer ",["$","code",null,{"children":"3"}]," 用 ",["$","code",null,{"children":"--consumer-property group.id=group2"}],"。"]}],"\n",["$","li",null,{"children":["Consumer ",["$","code",null,{"children":"4"}]," 用 ",["$","code",null,{"children":"--consumer-property group.id=group2"}],"。"]}],"\n"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-console-consumer.sh --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-console-consumer.bat --bootstrap-server localhost:9991,localhost:9992 --topic new-topic-name --consumer-property group.id=group1\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.5.2 列出 consumer groups"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"bin/kafka-consumer-groups.sh --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\n"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"bin\\windows\\kafka-consumer-groups.bat --bootstrap-server localhost:9991,localhost:9992 --describe --all-groups\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 測試"}],"\n",["$","p",null,{"children":"先複製好所有安裝檔既 folders，然後跟次序啟用以下既 components："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"ZooKeeper"}],"\n",["$","li",null,{"children":"Broker 1"}],"\n",["$","li",null,{"children":"Broker 2"}],"\n",["$","li",null,{"children":"Producer 1"}],"\n",["$","li",null,{"children":"Producer 2"}],"\n",["$","li",null,{"children":"Consumer 1 (group 1)"}],"\n",["$","li",null,{"children":"Consumer 2 (group 1)"}],"\n",["$","li",null,{"children":"Consumer 3 (group 2)"}],"\n",["$","li",null,{"children":"Consumer 4 (group 2)"}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2021-09/kafka-cli/kafka-cli-binaries.png","alt":""}]}],"\n",["$","h2",null,{"children":"4.1 相同數量既 partitions、consumers"}],"\n",["$","p",null,{"children":["將以下既 command prompt script 保存做 ",["$","code",null,{"children":"start-all.bat"}],"，然後執行："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-powershell","children":"$f"}]}],"\n",["$","p",null,{"children":"之後發送訊息："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Producer 1 發送 ",["$","code",null,{"children":"1|message should go to partition A"}],"。"]}],"\n",["$","li",null,{"children":["Producer 1 發送 ",["$","code",null,{"children":"2|message should go to partition B"}],"。"]}],"\n",["$","li",null,{"children":["Producer 2 發送 ",["$","code",null,{"children":"1|message should go to partition A (producer 2)"}],"。"]}],"\n",["$","li",null,{"children":["Producer 2 發送 ",["$","code",null,{"children":"2|message should go to partition B (producer 2)"}],"。"]}],"\n"]}],"\n",["$","p",null,{"children":"結果："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["唔會有一個 consumer 又收到 ",["$","code",null,{"children":"partition A"}]," 既訊息，又收到 ",["$","code",null,{"children":"partition B"}]," 既訊息。"]}],"\n"]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["因為每個 consumer group 裡面既 consumer 數量同 partition 數量一樣，所以我地見到訊息 ID 係 ",["$","code",null,{"children":"1"}]," 既訊息只會去同一個 consumer，而訊息 ID 係 ",["$","code",null,{"children":"2"}]," 既訊息就會去另一個 consumer。"]}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2021-09/kafka-cli/producers-publish-messages.png","alt":""}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2021-09/kafka-cli/consumers-receive-messages.png","alt":""}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"4.2 Partition 數量多過 consumer（只維持一段時間）"}],"\n",["$","p",null,{"children":"關於呢個測試："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["承接上面既測試，我地可以停止某一個 consumer，令到佢既 consumer group 得返 ",["$","code",null,{"children":"1"}]," 個 consumer。"]}],"\n",["$","li",null,{"children":["因為 partitions 有 ",["$","code",null,{"children":"2"}]," 個，但係呢個 consumer group 只有 ",["$","code",null,{"children":"1"}]," 個 consumer，咁之後既所有訊息發送去呢個 consumer group 既時候都只會發送到呢 ",["$","code",null,{"children":"1"}]," 個 consumer 度。"]}],"\n",["$","li",null,{"children":["不過，過一排之後，當呢個 consumer group 回復返係 ",["$","code",null,{"children":"2"}]," 個 consumers，咁之後既所有訊息發送去呢個 consumer group 既時候又會再次平均分配到呢 ",["$","code",null,{"children":"2"}]," 個 consumers 度。"]}],"\n"]}],"\n",["$","p",null,{"children":"具體既測試步驟："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["承接上面既測試，我地而家有 ",["$","code",null,{"children":"2"}]," 個 consumer groups，各有 ",["$","code",null,{"children":"2"}]," 個 consumers，總共有 ",["$","code",null,{"children":"4"}]," 個 consumers。"]}],"\n",["$","li",null,{"children":["喺 consumer ",["$","code",null,{"children":"3"}],"（group 2）既 command prompt window 度撳 ",["$","code",null,{"children":"Ctrl+C"}],"。"]}],"\n",["$","li",null,{"children":["喺任意既一個 producer 發送：",["$","code",null,{"children":"1|message should go to partition A (testing single consumer in group)"}],"。"]}],"\n",["$","li",null,{"children":["喺任意既一個 producer 發送：",["$","code",null,{"children":"2|message should go to partition B (testing single consumer in group)"}],"。"]}],"\n",["$","li",null,{"children":["檢查 consumer ",["$","code",null,{"children":"4"}],"（group 2）既 command prompt window，應該會見到佢收到曬 ",["$","code",null,{"children":"2"}]," 個訊息。"]}],"\n",["$","li",null,{"children":["喺 consumer ",["$","code",null,{"children":"3"}],"（group 2）既 command prompt window 度執行返啟動既 command。"]}],"\n",["$","li",null,{"children":["喺任意既一個 producer 發送：",["$","code",null,{"children":"1|message should go to partition A (testing two consumers in group again)"}],"。"]}],"\n",["$","li",null,{"children":["喺任意既一個 producer 發送：",["$","code",null,{"children":"2|message should go to partition B (testing two consumers in group again)"}],"。"]}],"\n",["$","li",null,{"children":["檢查 consumer ",["$","code",null,{"children":"3"}],"、",["$","code",null,{"children":"4"}],"（group 2）既 command prompt windows，應該會見到佢地各自都收到 ",["$","code",null,{"children":"1"}]," 個訊息。"]}],"\n",["$","li",null,{"children":["檢查 consumer ",["$","code",null,{"children":"1"}],"、",["$","code",null,{"children":"2"}],"（group 1）既 command prompt windows，應該會見到佢地各自都收到 ",["$","code",null,{"children":"2"}]," 個訊息。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["收開 ",["$","code",null,{"children":"partition A"}]," 訊息既 consumer 會收到呢個測試新增既 ",["$","code",null,{"children":"2"}]," 個 ",["$","code",null,{"children":"partition A"}]," 訊息。"]}],"\n",["$","li",null,{"children":["收開 ",["$","code",null,{"children":"partition B"}]," 訊息既 consumer 會收到呢個測試新增既 ",["$","code",null,{"children":"2"}]," 個 ",["$","code",null,{"children":"partition B"}]," 訊息。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["就算 consumer ",["$","code",null,{"children":"3"}]," 回復運作，佢都唔一定會收返同最開始相同既 partition 既訊息，而係可能會同 consumer ",["$","code",null,{"children":"4"}]," 交換左。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"不過唔需要擔心，因為相同 partition 既訊息都仲係保持到 message ordering。"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2021-09/kafka-cli/consumers-receive-messages-2.png","alt":""}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://www.cloudkarafka.com/blog/cloudkarafka-what-is-zookeeper.html","children":"What is Zookeeper and why is it needed for Apache Kafka?"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.confluent.io/platform/current/kafka/kafka-basics.html#single-machine-multi-broker-and-multi-cluster-configurations","children":"Confluent - Single machine, multi-broker and multi-cluster configurations"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://www.instaclustr.com/a-visual-understanding-to-ensuring-your-kafka-data-is-literally-in-order/","children":"A Visual Understanding to Ensuring Your Kafka Data is (Literally) in Order"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.confluent.io/platform/current/installation/configuration/producer-configs.html#partitioner-class","children":["Confluent - Producer Configurations - ",["$","code",null,{"children":"partitioner.class"}]]}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/producer/internals/DefaultPartitioner.java","children":["Kafka GitHub - ",["$","code",null,{"children":"DefaultPartitioner.java"}]]}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://dzone.com/articles/custom-partitioner-in-kafka-lets-take-quick-tour","children":"Custom Partitioner in Kafka: Let's Take a Quick Tour!"}]}],"\n"]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","2UkCHha_ph0nQ-kQnkPZr",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
