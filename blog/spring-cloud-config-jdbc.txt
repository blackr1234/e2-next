1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
12:I[6213,[],"OutletBoundary"]
14:I[6213,[],"MetadataBoundary"]
16:I[6213,[],"ViewportBoundary"]
18:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T4d2,<dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>2.7.11</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>2021.0.7</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
</dependencyManagement>

<dependencies>
	<dependency>
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-config-server</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jdbc</artifactId>
	</dependency>

	<!-- MySQL -->
	<dependency>
		<groupId>com.mysql</groupId>
		<artifactId>mysql-connector-j</artifactId>
	</dependency>

	<!-- SQL Server -->
	<dependency>
		<groupId>com.microsoft.sqlserver</groupId>
		<artifactId>mssql-jdbc</artifactId>
		<version>12.2.0.jre11</version>
	</dependency>

	<!-- H2 -->
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
	</dependency>
</dependencies>
10:T6ad,spring:
    datasource:
        # MySQL
        #    url: jdbc:mysql://localhost:3306/scc
        #    username: mysql
        #    password: mysql
        # H2
        url: jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;TRACE_LEVEL_FILE=4
        username: sa
        password:
    h2:
        console:
            enabled: true
            path: /h2-console
    sql:
        init:
            mode: always
            platform: h2
    cloud:
        config:
            server:
                git:
                    clone-on-start: true
                    refresh-rate: 10
                    ignore-local-ssh-settings: true
                    uri: git@github.com:blackr1234/spring-cloud-config-demo.git
                    default-label: master
                    search-paths:
                        - "{application}"
                    host-key: "AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg="
                    host-key-algorithm: ecdsa-sha2-nistp256
                    private-key: |
                        -----BEGIN EC PRIVATE KEY-----
                        MHcCAQEEIPnupl8oxl0Wj6xfOd/PobBG48m3pVkmubPem1XSyexEoAoGCCqGSM49
                        AwEHoUQDQgAEUGO+DDpbpsgp3C+H68iTTaklmcnk2MSbbh4bwQVnMws09eqFqvA4
                        RzcTRtAXt2IWkq4JHUg6rtjDnc/0zwSQyQ==
                        -----END EC PRIVATE KEY-----
                jdbc:
                    enabled: true
                    sql: "SELECT config_key, config_value FROM properties WHERE config_client_app_name = ? AND config_profile = ? AND config_label = ?"
                    order: 1
11:T57b,package org.springframework.cloud.config.server.environment;

/**
 * <p>This class is a duplicate of the same class from Spring Cloud Config.
 * This version fixes a bug in the order of queries with application names and profiles.</p>
 *
 * @author Dave Syer
 * @author Michael Chung
 * @see <a href="https://github.com/spring-cloud/spring-cloud-config/issues/2205">Spring Cloud Config issue #2205</a>
 * @see <a href="https://github.com/spring-cloud/spring-cloud-config/pull/2207/commits/cc5aae457eef2ab5925669b4c608bbb3f003e694">Spring Cloud Config issue #2207 - commit</a>
 */
public class JdbcEnvironmentRepository implements EnvironmentRepository, Ordered {

	// ...

	@Override
	public Environment findOne(String application, String profile, String label) {

		// ...

		// XXX fixed the order
		for (String env : envs) {
			for (String app : applications) {
				try {
					Map<String, Object> next = this.jdbc.query(this.sql, this.extractor, app, env, label);
					if (next != null && !next.isEmpty()) {
						environment.add(new PropertySource(app + "-" + env, next));
					}
				}
				catch (DataAccessException e) {
					if (!failOnError) {
						if (logger.isDebugEnabled()) {
							logger.debug("Failed to retrieve configuration from JDBC Repository", e);
						}
					}
					else {
						throw e;
					}
				}
			}
		}
		return environment;
	}
}
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","spring-cloud-config-jdbc"],"i":false,"f":[[["",{"children":["blog",{"children":["(2023-01)",{"children":["spring-cloud-config-jdbc",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2023-01)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2023-01)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["spring-cloud-config-jdbc",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2023-01)","children","spring-cloud-config-jdbc","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 Spring Cloud Config 簡介"}],"\n",["$","p",null,{"children":["關於 Spring Cloud Config 既基本簡介可以喺呢篇度搵到：",["$","a",null,{"href":"/blog/spring-cloud-config#1-spring-cloud-config-%E7%B0%A1%E4%BB%8B","children":"Spring Cloud Config——使用獨立既 Git 配置 repo - Spring Cloud Config 簡介"}],"。"]}],"\n",["$","h2",null,{"children":"1.1 JDBC backend"}],"\n",["$","p",null,{"children":"今次呢篇係關於利用 JDBC backend，我地會用 RDBMS 傳統 DB 黎儲存所有配置資料。"}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 建立 RDBMS"}],"\n",["$","p",null,{"children":"今次測試會用到 H2 in-memory DB 以及 MySQL，而 H2 我地只需要喺 code 度初始化就可以。"}],"\n",["$","h2",null,{"children":"2.1 建立測試用 MySQL 連線"}],"\n",["$","p",null,{"children":["我地可以參考返呢篇文：",["$","a",null,{"href":"/blog/docker-basics#332-mysql","children":"Docker 基本操作 - MySQL"}],"。"]}],"\n",["$","p",null,{"children":["啟動左 Docker Desktop 之後，執行以下 command，喺 MySQL 度建立一個叫 ",["$","code",null,{"children":"scc"}]," 既 database："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker container run -d --rm -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_USER=mysql -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=scc -v \"C:/docker-data/mysql:/var/lib/mysql\" --name mysql mysql:latest\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 建立 table"}],"\n",["$","p",null,{"children":["先進入 Docker container 並且登入 MySQL 既 CLI，存取 ",["$","code",null,{"children":"scc"}]," database："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker container exec -it mysql mysql -u\"root\" -p\"root\" scc\n"}]}],"\n",["$","p",null,{"children":["Spring Cloud Config 默認會用 ",["$","code",null,{"children":"properties"}]," table，但我地最好自定義 column 名，避免默認既 columns 帶有 reserved keywords，例如 ",["$","code",null,{"children":"key"}],"、",["$","code",null,{"children":"value"}],"。"]}],"\n",["$","p",null,{"children":"SQL Server 既例子："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"CREATE TABLE properties (\r\n\tconfig_client_app_name VARCHAR(200) NOT NULL,\r\n\tconfig_profile VARCHAR(200) NOT NULL,\r\n\tconfig_label VARCHAR(200) NOT NULL,\r\n\tconfig_key VARCHAR(200) NOT NULL,\r\n\tconfig_value NVARCHAR(MAX) NULL\r\n);\n"}]}],"\n",["$","p",null,{"children":"MySQL 既例子："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"CREATE TABLE properties (\r\n\tconfig_client_app_name VARCHAR(200) NOT NULL,\r\n\tconfig_profile VARCHAR(200) NOT NULL,\r\n\tconfig_label VARCHAR(200) NOT NULL,\r\n\tconfig_key VARCHAR(200) NOT NULL,\r\n\tconfig_value VARCHAR(10000) NULL\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 DEFAULT COLLATE=utf8mb4_0900_ai_ci;\n"}]}],"\n",["$","p",null,{"children":["註：如果想用 ",["$","code",null,{"children":"properties"}]," 以外既 table 名係可以既，稍後可以喺 config server 既配置度改條 SELECT SQL。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.3 新增紀錄"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"INSERT INTO properties (config_client_app_name, config_profile, config_label, config_key, config_value)\r\nVALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello MySQL!');\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 動手寫"}],"\n",["$","h2",null,{"children":"3.1 Config server"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MainConfigServerApp.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/resources"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"bootstrap.yml"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"data-h2.sql"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"schema-h2.sql"}]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","h3",null,{"children":"3.1.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"$f"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.2 Java code"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MainConfigServerApp.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@EnableConfigServer\r\n@SpringBootApplication\r\npublic class MainConfigServerApp {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(MainConfigServerApp.class);\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.3 Bootstrap 配置"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"bootstrap.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"encrypt:\r\n    key: michael ## or use the ENCRYPT_KEY environment variable\r\n\r\nspring:\r\n    profiles:\r\n        active: jdbc ## should be externalized\r\n    cloud:\r\n        config:\r\n            server:\r\n                encrypt:\r\n                    enabled: true\n"}]}],"\n",["$","p",null,{"children":["註：一定要用 ",["$","code",null,{"children":"jdbc"}]," 既 Spring profile 先可以啟用到 JDBC backend。"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.4 Application 配置"}],"\n",["$","p",null,{"children":"我地喺原先既 Git backend 配置度再加上 JDBC backend 既配置。"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"application.yml"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"$10"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"spring.cloud.config.server.jdbc.sql"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["條 SQL prepared statement 唔預你大改，因為啲 params（",["$","code",null,{"children":"?"}],"）會塞既 values 係固定位置既。"]}],"\n",["$","li",null,{"children":["佢主要係畀你加減下啲 quotes，去令到條 SQL 可以適用喺我地用既 DB 度，例如 ",["$","code",null,{"children":"key"}]," 同 ",["$","code",null,{"children":"value"}]," 喺某啲版本既某啲 DB 可以係 reserved words，咁既話就一定要加 quotes。"]}],"\n",["$","li",null,{"children":["如果想用默認既 ",["$","code",null,{"children":"properties"}]," 以外既 table 名，可以喺度改。"]}],"\n",["$","li",null,{"children":["除非用最新版 Spring Cloud Config ",["$","code",null,{"children":"4.0.1"}],"，否則 JDBC backend 係唔支援 default label，即係同 Git backend 唔同。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"3.1.5 初始化 H2 in-memory DB 既配置檔"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"src/main/resources/schema-h2.sql"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"CREATE TABLE properties (\r\n    config_client_app_name VARCHAR(200) NOT NULL,\r\n    config_profile VARCHAR(200) NOT NULL,\r\n    config_label VARCHAR(200) NOT NULL,\r\n    config_key VARCHAR(200) NOT NULL,\r\n    config_value CLOB(10K) NULL\r\n);\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"src/main/resources/data-h2.sql"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-sql","children":"INSERT INTO properties (config_client_app_name, config_profile, config_label, config_key, config_value)\r\nVALUES ('spring-cloud-config-client-demo', 'dev', 'master', 'my.prop', 'Hello H2!');\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 Config client"}],"\n",["$","p",null,{"children":["至於 config client，我地可以完全用返之前寫落果個，詳情可以睇返呢篇：",["$","a",null,{"href":"/blog/spring-cloud-config-git#32-config-client","children":"Spring Cloud Config——使用獨立既 Git 配置 repo - Config client"}],"。"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 簡單測試"}],"\n",["$","h2",null,{"children":"4.1 步驟"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"啟動 config server。"}],"\n",["$","li",null,{"children":"啟動 config client。"}],"\n",["$","li",null,{"children":["檢查 ",["$","code",null,{"children":"my.prop"}]," 既 value，應該係而家 DB 裡面既 value。"]}],"\n",["$","li",null,{"children":["更改 DB 裡面既 ",["$","code",null,{"children":"my.prop"}]," 既 value。"]}],"\n",["$","li",null,{"children":["Call config client 既 ",["$","code",null,{"children":"/actuator/refresh"}]," API。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Response body 裡面會有一個 array，其中一個 string 就係 ",["$","code",null,{"children":"my.prop"}],"，意味住 ",["$","code",null,{"children":"my.prop"}]," 既 value 改變左。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["檢查 ",["$","code",null,{"children":"my.prop"}]," 既 value，應該係我地改成既新 value。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"4.2 檢查 property value"}],"\n",["$","p",null,{"children":["針對 ",["$","code",null,{"children":"my.prop"}],"，我地有以下既方法："]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Call config client 既 ",["$","code",null,{"children":"/actuator/env"}]," API，response body 會有 ",["$","code",null,{"children":"my.prop"}]," 既 value，呢個方法只需要配置好 Actuator 就可以用。"]}],"\n",["$","li",null,{"children":["因為我地有特登寫 code 去做 logging，所以我地可以留意 config client 既 log 裡面 ",["$","code",null,{"children":"my.prop"}]," 既 value。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 配置紀錄既應用次序"}],"\n",["$","p",null,{"children":["可以睇返呢篇：",["$","a",null,{"href":"/blog/spring-cloud-config-git#5-%E9%85%8D%E7%BD%AE%E6%AA%94%E6%97%A2%E6%87%89%E7%94%A8%E6%AC%A1%E5%BA%8F","children":"Spring Cloud Config——使用獨立既 Git 配置 repo - 配置檔既應用次序"}],"。"]}],"\n",["$","h2",null,{"children":"5.1 自己發現到既 bug"}],"\n",["$","p",null,{"children":["我喺 2023-01-07 發現到 ",["$","code",null,{"children":"spring-cloud-config-server"}]," 版本 ",["$","code",null,{"children":"4.0.0"}]," 或以前既 JDBC backend 對於配置紀錄既應用次序同 Git backend 有唔同，之後 Spring Cloud 項目既維護人員確認左個 bug，然後喺新版本 ",["$","code",null,{"children":"4.0.1"}]," 度 fix。"]}],"\n",["$","h3",null,{"children":"5.1.1 問題核心"}],"\n",["$","p",null,{"children":"Git backend 既實現畀到出黎既次序係："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}"}]}],"\n"]}],"\n",["$","p",null,{"children":"但當我地使用 JDBC backend，個次序就會變左："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"application"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"application-{profile}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"{spring.application.name}-{profile}"}]}],"\n"]}],"\n",["$","p",null,{"children":"呢個 bug 一直存在喺 JDBC backend 既 code，但唔影響 Git backend。"}],"\n",["$","p",null,{"children":["詳見：",["$","a",null,{"href":"https://github.com/spring-cloud/spring-cloud-config/issues/2205#issuecomment-1374253402","children":"GitHub - spring-cloud/spring-config-config - issue #2205"}]]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.1.2 即時解決方法"}],"\n",["$","p",null,{"children":["確定適用既 Spring Boot 版本：",["$","code",null,{"children":"2.7.1"}]]}],"\n",["$","p",null,{"children":["如果等唔切 ",["$","code",null,{"children":"spring-cloud-config-server"}]," 推出新版本，或者因為某啲原因而唔想用新版本，咁喺使用舊版本既情況下，我地可以覆蓋 Spring 有問題既 Java class。"]}],"\n",["$","p",null,{"children":["以下係改好左既 ",["$","code",null,{"children":"org.springframework.cloud.config.server.environment.JdbcEnvironmentRepository"}],"，我地只要將佢放喺我地既 config server 既 ",["$","code",null,{"children":"src/main/java"}]," 既對應 package 度，個 Java app 運行既時候就會用我地果個版本既 Java class。"]}],"\n",["$","p",null,{"children":["唯一既改動就係將 ",["$","code",null,{"children":"findOne"}]," method 既 2 個 for loops 調轉。"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"$11"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"呢個方法都係試出黎。"}],"\n",["$","li",null,{"children":["Spring 既 class loading 複雜，而根據經驗，新舊版本既實現都可以好唔同。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"並唔能夠保證舊版或者新版既 Spring Boot 項目甚或冇用 Spring 既 Maven 項目都一樣可以咁做黎覆蓋第三方 library 既 source code。"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":"但至少試過喺呢個 Spring Boot 版本下打包成 JAR 之後都可以成功覆蓋到。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"6 連線容錯測試"}],"\n",["$","p",null,{"children":"根據測試，JDBC backend 並唔容許 DB 連線失敗，因為佢冇用 cache，所以當個 config DB 有 downtime，config client 係有可能啟動唔到。"}],"\n",["$","h2",null,{"children":"6.1 使用 JDBC backend 而 DB 連線失敗"}],"\n",["$","p",null,{"children":"模擬連線失敗場景："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"啟動 MySQL Docker container。"}],"\n",["$","li",null,{"children":"啟動 config server。"}],"\n",["$","li",null,{"children":"啟動 config client。"}],"\n",["$","li",null,{"children":"呢個時候，我地可以見到 config server 既 log 度有 SELECT SQL 既 logs。"}],"\n",["$","li",null,{"children":"暫停 MySQL Docker container。"}],"\n",["$","li",null,{"children":"重新啟動 config client，可以見到 config client 啟動既時候停左喺度一陣之後，就因為喺 config server 度拎唔到配置而繼續執行，而視乎個 JAR 檔裡面既配置能唔能夠滿足到啲 Spring beans 既需要，個 config client 有可能會啟動失敗。咁都係因為 config server 冇任何 cache，所以佢每次都會問 DB 拎配置紀錄。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"7 用返 Git backend"}],"\n",["$","p",null,{"children":"當我地已經用緊 JDBC backend，但係有需要用返 Git 既話，就要重新執行過個 config server。"}],"\n",["$","p",null,{"children":"我地需加上以下既配置去 disable datasource 既 auto-configuration："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration\n"}]}],"\n",["$","p",null,{"children":"另外，我地亦都要："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["唔用 ",["$","code",null,{"children":"jdbc"}]," Spring profile。"]}],"\n",["$","li",null,{"children":["移除 ",["$","code",null,{"children":"spring.datasource"}]," 既相關配置。"]}],"\n",["$","li",null,{"children":["將 ",["$","code",null,{"children":"spring.cloud.config.server.jdbc.enabled"}]," 設置成 ",["$","code",null,{"children":"false"}],"。"]}],"\n"]}]],null,["$","$L12",null,{"children":"$L13"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","QHTPika6bzbg_ZyWFjb8h",{"children":[["$","$L14",null,{"children":"$L15"}],["$","$L16",null,{"children":"$L17"}],null]}]]}],false]],"m":"$undefined","G":["$18","$undefined"],"s":false,"S":true}
17:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
13:null
