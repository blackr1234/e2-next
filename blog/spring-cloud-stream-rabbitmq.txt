1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T484,spring:
    rabbitmq:
        host: localhost
        port: 5672
        username: rmq
        password: rmq
#    virtual-host: "/"

---
spring:
    cloud:
        function:
            definition: michaelProduce;michaelConsume # 注意：michaelProduce 會每秒發送訊息
        stream:
            bindings:
                michaelProduce-out-0:
                    destination: michael-exchange
                    binder: rabbit
                michaelConsume-in-0:
                    destination: michael-exchange
                    group: michael-queue
                    binder: rabbit
            rabbit:
                bindings:
                    michaelProduce-out-0:
                        producer:
                            exchange-type: fanout # 默認係 topic。如果已經個 exchange 已經存在，咁呢個配置就一定要 match，否則會有 error
                    michaelConsume-in-0:
                        consumer:
                            exchange-type: fanout # 默認係 topic。如果已經個 exchange 已經存在，咁呢個配置就一定要 match，否則會有 error
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","spring-cloud-stream-rabbitmq"],"i":false,"f":[[["",{"children":["blog",{"children":["(2024-01)",{"children":["spring-cloud-stream-rabbitmq",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2024-01)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-01)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["spring-cloud-stream-rabbitmq",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-01)","children","spring-cloud-stream-rabbitmq","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 RabbitMQ 簡介"}],"\n",["$","p",null,{"children":"RabbitMQ 係一個強大既 messaging broker 工具，可以畀我地用 messaging 黎達到 asynchronous 既 microservice communication，以及做到 event-driven architecture。佢同 Azure Service Bus 以及 Kafka 相類似。"}],"\n",["$","p",null,{"children":"負責發布訊息既微服務會將文字訊息發送到 RabbitMQ，然後 RabbitMQ 會暫時儲存住呢啲訊息，而訂閱左呢個 RabbitMQ 既微服務稍後就會收到訊息。當訂閱方成功接收到訊息，RabbitMQ 就會移除呢啲已經傳送既訊息。"}],"\n",["$","h2",null,{"children":"1.1 Messaging entities 概念"}],"\n",["$","p",null,{"children":"首先，當我地喺 RabbitMQ 創建 messaging entities，我地一定要將佢地創建喺某一個 virtual host（亦叫 vhost）裡面，而 virtual host 係用黎 group 起有關既 messaging entities，類似係一個 folder 既概念。"}],"\n",["$","p",null,{"children":"RabbitMQ 有以下既 messaging entities："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Messaging entity"}],["$","th",null,{"children":"描述"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Exchange"}],["$","td",null,{"children":"Exchange 係一個訊息發送對象。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Queue"}],["$","td",null,{"children":"一條隊列，可以係一個訊息發送對象。任意數量既發布方、任意數量既訂閱方都可以使用同一條隊列收發訊息。Queue 並唔隸屬於某一個 exchange，而係獨立既存在，而我地要透過 binding 黎將 queue 連繫到 exchange。"}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.2 Exchange 種類"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Exchange 種類"}],["$","th",null,{"children":"描述"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Fanout exchange"}],["$","td",null,{"children":"所有 bind 左既 queues 都收到訊息，用作 broadcasting。類似 Azure Service Bus 既 topic、subscriptions。Queue 依然可以用 routing key bind 落 fanout exchange，但佢會無視 routing key 照發送畀所有 bind 左既 queues。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Direct exchange"}],["$","td",null,{"children":["Queue 可以用特定既 routing key（例如 ",["$","code",null,{"children":"backup.order"}],"、",["$","code",null,{"children":"backup.product"}],"）黎 bind 落 direct exchange，之後就會收到符合呢個 routing key 既訊息。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Topic exchange"}],["$","td",null,{"children":["同 direct exchange 一樣，但佢既 bindings 既 routing key 可以用 ",["$","code",null,{"children":"*"}]," 代表 exactly 一個任何文字，或者 ",["$","code",null,{"children":"#"}]," 黎代表任意長度（",["$","code",null,{"children":"0"}]," 至 ",["$","code",null,{"children":"N"}],"）既任何文字，但要注意佢地唔似 RegEx，我地必須用 ",["$","code",null,{"children":"."}]," 黎分隔佢地以及其他 routing key 既文字部分，例如 ",["$","code",null,{"children":"backup.#"}],"。如果個 binding 既 routing key 只係一個 ",["$","code",null,{"children":"#"}]," 符號，咁個 queue 就會收到黎自個 topic exchange 既所有訊息。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Headers exchange"}],["$","td",null,{"children":"Queue binding 可以有多個特定既 key-value argument match 要求，之後就會收到符合呢啲 key-value arguments 既訊息。"}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"1.3 Queue 種類"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"style":{"textAlign":"center"},"children":"Queue 種類"}],["$","th",null,{"children":"描述"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Classic queue"}],["$","td",null,{"children":"一般既 queue。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Quorum queue"}],["$","td",null,{"children":"係一種新型既 queue 種類，針對需要高數據安全以及可用性既場景，比起 classic mirrored queue 可以應付既錯誤場景更多、更全面。"}]]}],["$","tr",null,{"children":[["$","td",null,{"style":{"textAlign":"center"},"children":"Stream"}],["$","td",null,{"children":"用 append-only log 既 implementation，類似 Kafka。"}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 動手寫"}],"\n",["$","h2",null,{"children":"2.1 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<parent>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t<version>3.2.4</version>\r\n</parent>\r\n\r\n<dependencyManagement>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\r\n\t\t\t<version>2023.0.1</version>\r\n\t\t\t<type>pom</type>\r\n\t\t\t<scope>import</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n</dependencyManagement>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.cloud</groupId>\r\n\t\t<artifactId>spring-cloud-stream-binder-rabbit</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.apache.commons</groupId>\r\n\t\t<artifactId>commons-lang3</artifactId>\r\n\t</dependency>\r\n\r\n\t<dependency>\r\n\t\t<groupId>org.projectlombok</groupId>\r\n\t\t<artifactId>lombok</artifactId>\r\n\t\t<scope>provided</scope>\r\n\t</dependency>\r\n</dependencies>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 Java code"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/config"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"MichaelQueueConsumer.java"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"MichaelQueueProducer.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/controller"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"SampleController.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MichaelQueueProducer.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@Configuration\r\npublic class MichaelQueueProducer {\r\n\r\n    @Bean\r\n    public Supplier<String> michaelProduce() {\r\n        return () -> {\r\n            final String dateTime = LocalDateTime.now(ZoneId.of(\"Hongkong\")).format(ofPattern(\"uuuu-MM-dd HH:mm:ss\"));\r\n            final String message = format(\"Test msg - %s (%s)\", RandomStringUtils.randomAlphanumeric(8), dateTime);\r\n            log.info(\"Sending: {}\", message);\r\n            return message;\r\n        };\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"MichaelQueueConsumer.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Slf4j\r\n@Configuration\r\npublic class MichaelQueueConsumer {\r\n\r\n    @Bean\r\n    public Consumer<String> michaelConsume() {\r\n        return msg -> {\r\n            log.info(\"Received message: {}\", msg);\r\n        };\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"SampleController.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@RestController\r\npublic class SampleController {\r\n\r\n    @Autowired\r\n    StreamBridge streamBridge;\r\n\r\n    @GetMapping\r\n    public void send(@RequestParam(name = \"msg\") String msg) {\r\n        streamBridge.send(\"michaelProduce-out-0\", msg);\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.3 Application 配置"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"$f"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 測試"}],"\n",["$","h2",null,{"children":"3.1 自動創建 exchange、queue、binding"}],"\n",["$","p",null,{"children":"執行個 microservice 之後，我地可以喺 RabbitMQ 既 management 介面見到多左以下既野："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["新增 fanout exchange ",["$","code",null,{"children":"michael-exchange"}]]}],"\n",["$","li",null,{"children":["新增 durable queue ",["$","code",null,{"children":"michael-exchange.michael-queue"}]]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"michael-exchange"}]," 同 ",["$","code",null,{"children":"michael-exchange.michael-queue"}]," 之間既 binding，冇任何 routing key 或者 arguments"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 接收自動發送訊息"}],"\n",["$","p",null,{"children":["用左 ",["$","code",null,{"children":"spring.cloud.function.definition"}]," 註冊既 ",["$","code",null,{"children":"Supplier"}]," functions 會自動每秒執行，即係每秒都會有一個新訊息發送到 RabbitMQ，所以如果我地既 microservice 有齊發送、接收訊息既功能，我地就可以喺 log 度睇到收發既情況。"]}],"\n",["$","p",null,{"children":"期望測試結果："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"個 microservice 每秒都會發送一個新訊息。"}],"\n",["$","li",null,{"children":"個 microservice 發送完訊息之後就即時收到返相同既訊息。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.3 接收手動發送訊息"}],"\n",["$","p",null,{"children":"利用我地寫既 REST HTTP API 發送訊息："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"curl localhost:8080/send?msg=foo\n"}]}],"\n",["$","p",null,{"children":"期望測試結果："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"個 microservice 會收到呢個訊息。"}],"\n",["$","li",null,{"children":"如果不斷執行呢句 command，個 microservice 就會不斷收到相同既訊息好多次。"}],"\n",["$","li",null,{"children":"唔會影響個 microservice 接收佢每秒自動發送既訊息。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.4 Competing consumers"}],"\n",["$","p",null,{"children":["我地可以喺 port ",["$","code",null,{"children":"8080"}],"、",["$","code",null,{"children":"8081"}],"、",["$","code",null,{"children":"8082"}]," 執行 ",["$","code",null,{"children":"3"}]," 個 instances。"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["只有一個 instance 註冊曬 ",["$","code",null,{"children":"Consumer"}],"、",["$","code",null,{"children":"Supplier"}]," functions。"]}],"\n",["$","li",null,{"children":["另外兩個 instances 只註冊 ",["$","code",null,{"children":"Consumer"}]," function。"]}],"\n"]}],"\n",["$","p",null,{"children":"執行第一個 instance："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"java -jar Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\n"}]}],"\n",["$","p",null,{"children":"開個新既 console window，執行第二個 instance："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"java -jar -Dserver.port=8081 -Dspring.cloud.function.definition=michaelConsume Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\n"}]}],"\n",["$","p",null,{"children":"開個新既 console window，執行第三個 instance："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"java -jar -Dserver.port=8082 -Dspring.cloud.function.definition=michaelConsume Spring-Cloud-Stream-RabbitMQ-Demo-1.0.0.jar\n"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地用 ",["$","code",null,{"children":"-D"}]," 去定義或者覆蓋 ",["$","code",null,{"children":"server.port"}]," 為 ",["$","code",null,{"children":"8081"}],"。"]}],"\n",["$","li",null,{"children":["我地用 ",["$","code",null,{"children":"-D"}]," 去定義或者覆蓋 ",["$","code",null,{"children":"spring.cloud.function.definition"}]," 為 ",["$","code",null,{"children":"michaelConsume"}],"。"]}],"\n"]}],"\n",["$","p",null,{"children":"期望測試結果："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"第一個 instance 每秒都會發送一個新訊息。"}],"\n",["$","li",null,{"children":["每個 instance 都係 exactly 每 ",["$","code",null,{"children":"3"}]," 秒收到一個訊息（唔係平均）。"]}],"\n",["$","li",null,{"children":"每個 instance 收到既訊息都唔一樣。"}],"\n"]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["RabbitMQ 默認既訊息分配策略係 round-robin。喺我地既情況，訊息會順序派發到 instance ",["$","code",null,{"children":"1"}]," ➜ ",["$","code",null,{"children":"2"}]," ➜ ",["$","code",null,{"children":"3"}]," ➜ ",["$","code",null,{"children":"1"}]," ➜ ",["$","code",null,{"children":"2"}]," ➜ ",["$","code",null,{"children":"3"}],"，如此類推。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 已知問題"}],"\n",["$","h2",null,{"children":"4.1 方括號包圍 message 導致既 bug"}],"\n",["$","p",null,{"children":["關於呢個問題，可以參考返上一篇：",["$","a",null,{"href":"/blog/spring-azure-service-bus#31-%E6%96%B9%E6%8B%AC%E8%99%9F%E5%8C%85%E5%9C%8D-message-%E5%B0%8E%E8%87%B4%E6%97%A2-bug","children":"Spring 項目中訂閱 Azure Service Bus - 3.1 方括號包圍 message 導致既 bug"}],"。"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"5 Debug RabbitMQ"}],"\n",["$","p",null,{"children":"我地可以喺需要 debug 既 vhost 上面開啟 RabbitMQ 既 Firehost Tracer 功能。"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["每個 vhost 本身都帶有一個 ",["$","code",null,{"children":"amq.rabbitmq.trace"}]," 既 topic exchange。我地可以 create 一個 queue，然後用 ",["$","code",null,{"children":"#"}]," 既 routing key 黎 bind 落去，咁呢個 queue 就會收到個 exchange 既所有 messages。"]}],"\n",["$","li",null,{"children":["執行 command 為呢個 vhost 開啟 Firehost Tracer 功能。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"rabbitmqctl trace_on -p \"<vhost>\"\n"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"參考資料："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://www.rabbitmq.com/docs/firehose","children":"Firehose Tracer"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"6 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://rabbitmq.com/tutorials/amqp-concepts.html","children":"RabbitMQ 官方文檔 - AMQP 0-9-1 Model Explained"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://rabbitmq.com/tutorials/tutorial-one-java.html","children":"RabbitMQ 官方文檔 - Tutorial One (Java) - Introduction"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://rabbitmq.com/tutorials/tutorial-two-java.html","children":"RabbitMQ 官方文檔 - Tutorial Two (Java) - Work Queues"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://rabbitmq.com/tutorials/tutorial-five-java.html","children":"RabbitMQ 官方文檔 - Tutorial Five (Java) - Topics"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://www.cloudamqp.com/blog/part4-rabbitmq-for-beginners-exchanges-routing-keys-bindings.html","children":"CloudAMQP - Part 4: RabbitMQ Exchanges, routing keys and bindings"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/producing-and-consuming-messages.html#suppliers-sources","children":"Spring Cloud Stream 官方文檔 - Suppliers (Sources)"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.spring.io/spring-cloud-stream/reference/rabbit/rabbit_overview/prod-props.html","children":"Spring Cloud Stream 官方文檔 - RabbitMQ Producer Properties"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://docs.spring.io/spring-cloud-stream/reference/rabbit/rabbit_overview/rabbitmq-consumer-properties.html","children":"Spring Cloud Stream 官方文檔 - RabbitMQ Consumer Properties"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://devindeving.blogspot.com/2019/09/rabbitmq-topic-exchange-key.html","children":"RabbitMQ - Topic Exchange 的規則，Routing Key、Binding Key 差異在哪"}]}],"\n"]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","-WUqn5CLLQh2EL51U_nMf",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
