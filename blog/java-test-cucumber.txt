1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
12:I[6213,[],"OutletBoundary"]
14:I[6213,[],"MetadataBoundary"]
16:I[6213,[],"ViewportBoundary"]
18:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T7a0,<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>3.2.3</version>
</parent>

<dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-bom</artifactId>
			<version>7.15.0</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
	</dependencies>
</dependencyManagement>

<dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>

	<!-- database -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	<dependency>
		<groupId>com.mysql</groupId>
		<artifactId>mysql-connector-j</artifactId>
	</dependency>

	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<scope>provided</scope>
	</dependency>

	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
	</dependency>

	<!-- testing -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-java</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-junit</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>io.cucumber</groupId>
		<artifactId>cucumber-spring</artifactId>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.junit.vintage</groupId>
		<artifactId>junit-vintage-engine</artifactId> <!-- JUnit 4 -->
		<scope>test</scope>
	</dependency>
</dependencies>
10:T994,@Slf4j
public class UserSteps {

    @Autowired UserRepo userRepo;
    @LocalServerPort int port;
    RestClient client = RestClient.builder().build();

    List<UserEntity> users;



    @Given("{int} users have registered")
    public void someNumberOfUsersHaveRegistered(int databaseUserCount) {

        // 用呢句黎測試一下 "users" instance field 既 scope，我地會發現每次都係 print null。
        System.out.println("Mick: " + users);

        userRepo.deleteAll();

        IntStream.rangeClosed(1, databaseUserCount)
            .mapToObj(this::createTestUser).forEach(userRepo::save);

        final long userCount = userRepo.count();

        log.info("User table now has {} records.", userCount);
    }

    @When("I make a request to get all users")
    public void makeRequestToGetAllUsers() {
        users = client.get().uri(getUrl("/users")).retrieve()
                    .body(new ParameterizedTypeReference<>() {});
    }

    @When("I make a request to get page {int} of all users with page size of {int}")
    public void makeRequestToGetPageOfSomeNumberAllUsersWithPageSizeOfSomeNumber(int page, int size) throws Exception {
        final JsonNode node = client.get().uri(getUrl(format("/users/paged?page=%d&size=%d", page, size))).retrieve()
                    .body(JsonNode.class);
        users = new JsonMapper().readerForListOf(UserEntity.class).readValue(node.get("content"));
        users.forEach(System.out::println);
    }

    @Then("the response should give me exactly {int} users")
    public void responseShouldReturnSomeNumberOfUsers(int userCount) {
        assertEquals(userCount, users.size());
    }

    @Then("every user is different")
    public void everyUserIsDifferent() {
        final Set<Long> userIds = users.stream().map(UserEntity::getId).collect(Collectors.toSet());
        assertEquals(users.size(), userIds.size());
    }



    private String getUrl(String path) {
        return "http://localhost:" + port + path;
    }

    private UserEntity createTestUser(int id) {

        final UserEntity user = new UserEntity();
        user.setName(RandomStringUtils.randomAlphabetic(20));
        user.setUserType("NORMAL");
        user.setRegisterDatetime(new Timestamp(System.currentTimeMillis()));
        user.setEmail(RandomStringUtils.randomAlphabetic(20) + "@example.com");

        return user;
    }
}
11:T4ce,Feature: User features

  Scenario Outline: Get All - <userCount> users when there are <userCount> users
    Given <userCount> users have registered
    When I make a request to get all users
    Then the response should give me exactly <userCount> users
    And every user is different

    Examples:
      | userCount |
      |         0 |
      |         1 |
      |        10 |

  Scenario Outline: Get All (Paged) - <expectedUserCount> users when getting page <page> with size of <size> when there are <userCount> users
    Given <userCount> users have registered
    When I make a request to get page <page> of all users with page size of <size>
    Then the response should give me exactly <expectedUserCount> users
    And every user is different

    Examples:
      | userCount | size | page | expectedUserCount |
      |         0 |    0 |    0 |                 0 |
      |         1 |    1 |    0 |                 1 |
      |         5 |    3 |    0 |                 3 |
      |         5 |    3 |    1 |                 2 |
      |        50 |   23 |    0 |                23 |
      |        50 |   23 |    1 |                23 |
      |        50 |   23 |    2 |                 4 |
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","java-test-cucumber"],"i":false,"f":[[["",{"children":["blog",{"children":["(2024-02)",{"children":["java-test-cucumber",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2024-02)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-02)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["java-test-cucumber",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-02)","children","java-test-cucumber","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"6 Cucumber"}],"\n",["$","p",null,{"children":"Cucumber 係一個專門做 behavior-driven development（BDD）testing 既 library，我地通常會喺用家既角度去測試我地既 Spring Boot 項目既 behaviors。"}],"\n",["$","p",null,{"children":"有別於 JUnit、Mocktio 呢啲用黎測試 single layer 既 libraries，BDD testing 既目的係根據用家提供既 user stories（需求場景）去設計 test cases。寫 BDD test cases 既時候，我地會用 natural language（例如英文）去描述每一個 behavior。我地想用 BDD testing 測試既野可以係類似購物落單流程、會員註冊流程既呢啲牽涉多個 Java classes 或者 Spring components 既業務功能。除左複雜既業務流程或者功能，我地都可以用 Cucumber 黎寫 REST API test cases，甚至測試 front-end 功能既 Selenium web tests。"}],"\n",["$","p",null,{"children":"Cucumber BDD tests 既描述檔用既係 Gherkin syntax，簡單黎講就係 Given-When-Then 既流程次序，如果寫過 Mockito BDD tests 既話應該唔會對 Given-When-Then 陌生。"}],"\n",["$","p",null,{"children":"以下係一個符合 BDD 既例子："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"Feature: Keyword search with Google\r\n\r\n  Scenario: A Google text search\r\n    Given the web browser is displaying the Google Search home page\r\n    When I enter \"cucumber\" as the search keyword\r\n\tAnd I click the Search button\r\n    Then search results for \"cucumber\" should be shown\n"}]}],"\n",["$","h2",null,{"children":"6.1 Gherkin keywords"}],"\n",["$","p",null,{"children":"以下係一啲常用既 Gherkin keywords："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"Keyword"}],["$","th",null,{"children":"用途"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"Feature"}]}],["$","td",null,{"children":["佢係每個 Cucumber ",["$","code",null,{"children":".feature"}]," 檔案既第一句，描述呢個系統功能係大概關於啲乜野。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":[["$","code",null,{"children":"Scenario"}],"／",["$","code",null,{"children":"Example"}]]}],["$","td",null,{"children":["佢係 under ",["$","code",null,{"children":"Feature"}]," 下面唔同既 BDD 場景。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":[["$","code",null,{"children":"Scenario Outline"}],"／",["$","code",null,{"children":"Scenario Template"}]]}],["$","td",null,{"children":["同 ",["$","code",null,{"children":"Scenario"}]," 既 structure 基本上一樣，但佢係「parameterized」版本既 ",["$","code",null,{"children":"Scenario"}],"，係實際會執行既 scenario 既 template，需要配合 ",["$","code",null,{"children":"Examples"}]," 裡面唔同既 test parameters 黎多次執行自己。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"Given"}]}],["$","td",null,{"children":["佢係 under ",["$","code",null,{"children":"Scenario"}]," 或者 ",["$","code",null,{"children":"Scenario Outline"}]," 既語句，一般係用黎描述 test data setup。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"When"}]}],["$","td",null,{"children":["佢係 under ",["$","code",null,{"children":"Scenario"}]," 或者 ",["$","code",null,{"children":"Scenario Outline"}]," 既語句，一般係用黎描述用家既行為。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"Then"}]}],["$","td",null,{"children":["佢係 under ",["$","code",null,{"children":"Scenario"}]," 或者 ",["$","code",null,{"children":"Scenario Outline"}]," 既語句，一般係用黎描述期望既結果。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"And"}]}],["$","td",null,{"children":["佢係 under ",["$","code",null,{"children":"Scenario"}]," 或者 ",["$","code",null,{"children":"Scenario Outline"}]," 既語句，承接上一句既 keyword，例如 ",["$","code",null,{"children":"When"}]," A ",["$","code",null,{"children":"And"}]," B、",["$","code",null,{"children":"Given"}]," A ",["$","code",null,{"children":"And"}]," B 以及 ",["$","code",null,{"children":"Then"}]," A ",["$","code",null,{"children":"And"}]," B。"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":[["$","code",null,{"children":"Examples"}],"／",["$","code",null,{"children":"Scenarios"}]]}],["$","td",null,{"children":["如果用 ",["$","code",null,{"children":"Scenario Outline"}]," 實現 parameterized test，我地就需要提供 ",["$","code",null,{"children":"Examples"}]," 黎作為每個實際 scenario 既 test parameters。"]}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"6.2 Maven dependencies"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"$f"}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"我地既 BDD test 會用 H2 database，以免連線到真既 MySQL database。"}],"\n",["$","li",null,{"children":["我地用左 ",["$","code",null,{"children":"cucumber-bom"}]," 黎控制 Cucumber test dependencies 既版本號碼。"]}],"\n",["$","li",null,{"children":["我地需要用返 JUnit 4，所以要加 ",["$","code",null,{"children":"junit-vintage-engine"}]," 既 test dependency。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"6.3 寫 Java code"}],"\n",["$","p",null,{"children":"Project structure："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"src/main/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/controller"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"UserController.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/entity"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"UserEntity.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/repo"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"UserRepo.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"/service"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"UserService.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"MainApplication.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/test/java"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/code"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/user"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"CucumberSpringConfig.java"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"UserSteps.java"}]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"UserTest.java"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"src/test/resources"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/features"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"/user"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"basic.feature"}]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"UserController"}],"、",["$","code",null,{"children":"UserEntity"}],"、",["$","code",null,{"children":"UserRepo"}],"、",["$","code",null,{"children":"UserService"}]," 都係一啲基本既 Spring components，呢度就唔特別寫出黎。"]}],"\n",["$","p",null,{"children":"下面寫既 Java classes 係 Cucumber 需要用到既。"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"CucumberSpringConfig.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@CucumberContextConfiguration\r\n@SpringBootTest(\r\n    classes = MainApplication.class,\r\n    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\r\npublic class CucumberSpringConfig {\r\n\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"UserTest.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@RunWith(Cucumber.class)\r\n@CucumberOptions(\r\n    features = {\r\n        \"src/test/resources/features\"\r\n    },\r\n    glue = \"code.user\"\r\n)\r\npublic class UserTest {\r\n\r\n}\n"}]}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"UserSteps.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"$10"}]}],"\n",["$","p",null,{"children":"解釋："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地喺 ",["$","code",null,{"children":"UserSteps"}]," 裡面寫既 ",["$","code",null,{"children":"@Given"}],"、",["$","code",null,{"children":"@When"}],"、",["$","code",null,{"children":"@Then"}]," method annotations 既 ",["$","code",null,{"children":"value"}]," 係對應返我地既 ",["$","code",null,{"children":".feature"}]," 檔既 behavior 描述。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["其實全部 methods annotate 曬做 ",["$","code",null,{"children":"@Given"}],"、",["$","code",null,{"children":"@When"}],"、",["$","code",null,{"children":"@Then"}]," 既其中一種都可以，唔需要 exactly match ",["$","code",null,{"children":".feature"}]," 檔裡面 scenario 既 keywords。"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"@Given"}],"、",["$","code",null,{"children":"@When"}],"、",["$","code",null,{"children":"@Then"}]," 可以用 ",["$","code",null,{"children":"{int}"}],"、",["$","code",null,{"children":"{string}"}]," 之類既 placeholders 黎對應返 method arguments。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["我地可以用 instance fields 黎喺同一個 scenario 裡面既 Given-When-Then 之間 share data。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["除非用到 Spring 既 annotations，否則一般既 instance fields 都會喺 scenario 開始既時候清除（",["$","code",null,{"children":"null"}],"），例如 ",["$","code",null,{"children":"UserSteps"}]," 既 ",["$","code",null,{"children":"List<UserEntity> users"}],"。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":["6.4 寫 Cucumber ",["$","code",null,{"children":".feature"}]," 檔"]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-plaintext","children":"$11"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"6.5 測試"}],"\n",["$","h3",null,{"children":"6.5.1 Eclipse 執行 JUnit test"}],"\n",["$","p",null,{"children":["當我地喺 Eclipse 度用 JUnit 4 執行 ",["$","code",null,{"children":"UserTest"}],"，就會見到以下 JUnit view 既結果："]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-02/java-test-cucumber/Eclipse-JUnit-view.png","alt":""}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"6.5.2 Maven CLI"}],"\n",["$","p",null,{"children":["我地執行 ",["$","code",null,{"children":"mvn test"}]," 就會見到以下既結果："]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-02/java-test-cucumber/mvn-test-result.png","alt":""}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Maven Surefire Plugin 有幾個默認既 test class naming patterns，如果我地既 test classes 唔 follow 呢啲 naming patterns，個 plugin 就會無視我地既 test classes。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["其中一個默認既 naming pattern 係 test class name 要帶有 ",["$","code",null,{"children":"Test"}]," 既 suffix，就好似我地既 ",["$","code",null,{"children":"UserTest"}]," 咁。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"6.6 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://automationpanda.com/2017/01/27/bdd-101-gherkin-by-example/","children":"BDD 101: Gherkin By Example"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://cucumber.io/docs/gherkin/reference/","children":"Cucumber 官方文檔 - Gherkin Reference"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://cucumber.io/docs/cucumber/step-definitions/?lang=java","children":"Cucumber 官方文檔 - Step Definitions"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://maven.apache.org/surefire/maven-surefire-plugin/examples/inclusion-exclusion.html","children":"Maven 官方文檔 - Inclusions and Exclusions of Tests"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://maven.apache.org/surefire/maven-surefire-plugin/examples/junit-platform.html#configuring-junit-platform","children":"Maven 官方文檔 - Using JUnit 5 Platform - Configuring JUnit Platform"}]}],"\n"]}]],null,["$","$L12",null,{"children":"$L13"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","QE1RZOBigE3U1RV23MCAH",{"children":[["$","$L14",null,{"children":"$L15"}],["$","$L16",null,{"children":"$L17"}],null]}]]}],false]],"m":"$undefined","G":["$18","$undefined"],"s":false,"S":true}
17:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
15:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
13:null
