1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
f:I[6213,[],"OutletBoundary"]
11:I[6213,[],"MetadataBoundary"]
13:I[6213,[],"ViewportBoundary"]
15:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","jmeter-perf-test"],"i":false,"f":[[["",{"children":["blog",{"children":["(2024-05)",{"children":["jmeter-perf-test",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2024-05)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-05)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["jmeter-perf-test",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2024-05)","children","jmeter-perf-test","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"1 JMeter 簡介"}],"\n",["$","p",null,{"children":"Apache JMeter 係一款專門做 API performance testing 既工具，佢可以用 multithreading 去模擬多個 users（或者 downstream clients）同時 request 需要測試既 HTTP APIs，然後佢會紀錄低 HTTP response、throughput、耗時等等既數據。"}],"\n",["$","h2",null,{"children":"1.1 下載 JMeter"}],"\n",["$","p",null,{"children":["$","a",null,{"href":"https://jmeter.apache.org/download_jmeter.cgi","children":"JMeter 官網 - Download Apache JMeter"}]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"2 動手做"}],"\n",["$","p",null,{"children":"我地會寫一個 Spring Boot web application，裡面會有以下既 HTTP APIs，我地既 JMeter script 都會根據相同既次序黎 loop HTTP API calls："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"次序"}],["$","th",null,{"children":"HTTP API"}],["$","th",null,{"children":"作用"}],["$","th",null,{"children":"JMeter 測試須知"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"1"}],["$","td",null,{"children":["$","code",null,{"children":"GET /api/uppercase/{value}"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"{value}"}]," 變成大楷然後返回。"]}],["$","td",null,{"children":"用 User Parameters 既隨機數據作為 request input；用 BeanShell PostProcessor 將 response body save 低。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"2"}],["$","td",null,{"children":["$","code",null,{"children":"GET /api/toJson/{value}"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"{value}"}]," 放入一個 object 裡面然後返回。"]}],["$","td",null,{"children":"用 JSR223 PostProcessor 將 response body 既某個 JSON field save 低。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"3"}],["$","td",null,{"children":["$","code",null,{"children":"GET /api/lowercase/{value}"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"{value}"}]," 變成細楷然後返回。"]}],["$","td",null,{"children":"N/A"}]]}]]}]]}],"\n",["$","h2",null,{"children":"2.1 建立 Spring Boot web microservice"}],"\n",["$","h3",null,{"children":"2.1.1 Maven dependencies"}],"\n",["$","p",null,{"children":"我地會加入 Spring Security 去令個 microservice 既 HTTP requests respond 得慢啲。"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-xml","children":"<parent>\r\n\t<groupId>org.springframework.boot</groupId>\r\n\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t<version>3.3.4</version>\r\n</parent>\r\n\r\n<dependencies>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t</dependency>\r\n\t<dependency>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t</dependency>\r\n</dependencies>\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.1.2 寫 Java code"}],"\n",["$","p",null,{"children":[["$","code",null,{"children":"SampleController.java"}],"："]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@RestController\r\n@RequestMapping(\"/api\")\r\npublic class SampleController {\r\n\r\n    @GetMapping(\"/uppercase/{value}\")\r\n    public String uppercase(@PathVariable(name = \"value\", required = true) String value) {\r\n        return value.toUpperCase();\r\n    }\r\n\r\n    @GetMapping(\"/toJson/{value}\")\r\n    public MyDto toJson(@PathVariable(name = \"value\", required = true) String value) {\r\n        return new MyDto(value, Arrays.asList(new MyDto2(3L, new BigDecimal(\"5.6\"))));\r\n    }\r\n\r\n    @GetMapping(\"/lowercase/{value}\")\r\n    public String lowercase(@PathVariable(name = \"value\", required = true) String value) {\r\n        return value.toLowerCase();\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.1.3 Application 配置"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yaml","children":"spring:\r\n    security:\r\n        user:\r\n            name: mick\r\n            password: foobar\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"2.2 建立 JMeter JMX 檔"}],"\n",["$","p",null,{"children":["我地會用 JMeter 既介面幫我地建立 JMX 檔，我地會將個 JMX 檔保存做 ",["$","code",null,{"children":"jmeter.jmx"}],"。"]}],"\n",["$","h3",null,{"children":"2.2.1 新增 Thread Group"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Test Plan"}]," > Add > Threads (Users) > Thread Group。"]}],"\n",["$","li",null,{"children":["將 Number of Threads (users) 改成 ",["$","code",null,{"children":"$${__P(threadCount, 500)}"}],"。"]}],"\n",["$","li",null,{"children":["將 Ramp-up period (seconds) 改成 ",["$","code",null,{"children":"0"}],"。"]}],"\n",["$","li",null,{"children":["將 Loop count 改成 ",["$","code",null,{"children":"$${__P(loopCount, 200)}"}],"。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.2 新增 HTTP Authorization Manager"}],"\n",["$","p",null,{"children":"因為我地有用到 Spring Security 去做 basic authentication，所以我地要加入 HTTP authorization manager："}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Thread Group"}]," > Add > Config Element > HTTP Authorization Manager。"]}],"\n",["$","li",null,{"children":"撳下面「Add」。"}],"\n",["$","li",null,{"children":["Username 輸入 ",["$","code",null,{"children":"mick"}],"。"]}],"\n",["$","li",null,{"children":["Password 輸入 ",["$","code",null,{"children":"foobar"}],"。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.3 新增 User Parameters"}],"\n",["$","p",null,{"children":"我地可以用 user parameters 黎定義 variables。"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Thread Group"}]," > Add > Pre Processors > User Parameters。"]}],"\n",["$","li",null,{"children":"啟用「Update Once Per Iteration」。"}],"\n",["$","li",null,{"children":"撳下面「Add Variable」。"}],"\n",["$","li",null,{"children":["Name 輸入 ",["$","code",null,{"children":"myRandomVal"}],"。"]}],"\n",["$","li",null,{"children":["User_1 輸入 ",["$","code",null,{"children":"$${__RandomString(10, abcdefghijklmnopqrstuvwxyz)}"}],"。"]}],"\n"]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["我地應該用 user parameters 而唔係 user-defined variables。","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"因為 user parameters 喺每個 iteration／loop 都會 reset；相反，user-defined variables 一直都會維持一樣既 values。"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.4 新增 HTTP Request"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["新增第 ",["$","code",null,{"children":"1"}]," 個 HTTP request。","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Thread Group"}]," > Add > Sampler > HTTP Request。"]}],"\n",["$","li",null,{"children":["將 Name 改成 ",["$","code",null,{"children":"HTTP Request - /api/uppercase/{value}"}],"。"]}],"\n",["$","li",null,{"children":["Protocol 輸入 ",["$","code",null,{"children":"http"}],"。"]}],"\n",["$","li",null,{"children":["Server Name or IP 輸入 ",["$","code",null,{"children":"localhost"}],"。"]}],"\n",["$","li",null,{"children":["Port Number 輸入 ",["$","code",null,{"children":"8080"}],"。"]}],"\n",["$","li",null,{"children":["Path 輸入 ",["$","code",null,{"children":"/api/uppercase/${myRandomVal}"}],"。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["新增第 ",["$","code",null,{"children":"2"}]," 個 HTTP request。","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Right-click 岩岩整既 HTTP request > Duplicate。"}],"\n",["$","li",null,{"children":["將 Name 改成 ",["$","code",null,{"children":"HTTP Request - /api/toJson/{value}"}],"。"]}],"\n",["$","li",null,{"children":["將 Path 改成 ",["$","code",null,{"children":"/api/toJson/${myTempVal}"}],"。"]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["新增第 ",["$","code",null,{"children":"3"}]," 個 HTTP request。","\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Right-click 岩岩整既 HTTP request > Duplicate。"}],"\n",["$","li",null,{"children":["將 Name 改成 ",["$","code",null,{"children":"HTTP Request - /api/lowercase/{value}"}],"。"]}],"\n",["$","li",null,{"children":["將 Path 改成 ",["$","code",null,{"children":"/api/lowercase/${myTempVal}"}],"。"]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.5 新增 BeanShell PostProcessor"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"HTTP Request - /api/uppercase/{value}"}]," > Add > Post Processors > BeanShell PostProcessor。"]}],"\n",["$","li",null,{"children":["Script 輸入 ",["$","code",null,{"children":"vars.put(\"myTempVal\", new String(data));"}],"。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.6 新增 JSR223 PostProcessor"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"HTTP Request - /api/toJson/{value}"}]," > Add > Post Processors > JSR223 PostProcessor。"]}],"\n",["$","li",null,{"children":["Script 輸入 ",["$","code",null,{"children":"vars.put(\"myTempVal\", prev.items[0].productName);"}],"。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.7 新增 View Results Tree"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Thread Group"}]," > Add > Listener > View Results Tree。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"2.2.8 新增 Summary Report"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Right-click ",["$","code",null,{"children":"Thread Group"}]," > Add > Listener > Summary Report。"]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"3 測試"}],"\n",["$","p",null,{"children":"我地配置左："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"500"}]," 個 users"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"200"}]," 個 loops"]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"3"}]," 個 HTTP requests"]}],"\n"]}],"\n",["$","p",null,{"children":["總共就會發起 ",["$","code",null,{"children":"500 × 200 × 3"}]," 即係 ",["$","code",null,{"children":"300000"}]," 個 HTTP requests。"]}],"\n",["$","h2",null,{"children":"3.1 用介面執行"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"撳上面 menu bar 下一行既綠色「▶️」掣開始 performance testing。"}],"\n",["$","li",null,{"children":"等佢運行一陣。"}],"\n",["$","li",null,{"children":"檢視 Views Results Tree，我地會見到所有 HTTP responses 都係綠色，即係成功。"}],"\n",["$","li",null,{"children":"檢視 Summary Report，我地會見到「TOTAL」既 throughput。"}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-05/jmeter-perf-test/jmeter-view-results-tree.png","alt":""}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-05/jmeter-perf-test/jmeter-summary-report.png","alt":""}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"3.2 用 command 執行"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"rmdir /s /q \"output\"\r\nmkdir \"output\"\r\njmeter -n -t \"jmeter.jmx\" -l \"./output/result.jtl\" -e -o \"./output/dashboard\" -J threadCount=500 -J loopCount=200\n"}]}],"\n",["$","p",null,{"children":"執行完之後，JMeter 會生成："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"HTML dashboard 檔案，我地可以用瀏覽器打開睇。"}],"\n",["$","li",null,{"children":"JTL 檔案，係包含所有 HTTP requests 既結果既 raw data，裡面係 CSV 格式。"}],"\n"]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-05/jmeter-perf-test/jmeter-command-line-console.png","alt":""}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-05/jmeter-perf-test/jmeter-dashboard-html-folder-structure.png","alt":""}]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"blog/2024-05/jmeter-perf-test/jmeter-dashboard-html-report.png","alt":""}]}],"\n",["$","p",null,{"children":"註："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"根據以上結果，CLI 模式（又叫 non-GUI 模式）既 throughput 居然會低過 GUI 模式。"}],"\n",["$","li",null,{"children":"不過，官方話我地係應該以 CLI 模式既結果為準。"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h1",null,{"children":"4 參考資料"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"https://jmeter.apache.org/usermanual/build-web-test-plan.html","children":"JMeter 官方文檔 - Building a Web Test Plan"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://jmeter.apache.org/usermanual/get-started.html#options","children":"JMeter 官方文檔 - Full list of command-line options"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://jmeter.apache.org/usermanual/functions.html","children":"JMeter 官方文檔 - Functions and Variables"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://jmeter.apache.org/usermanual/component_reference.html#User_Parameters","children":"JMeter 官方文檔 - User Parameters"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://jmetervn.com/2017/01/04/how-to-generate-dashboard-report-in-jmeter/","children":"How to generate Dashboard Report in JMeter"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://stackoverflow.com/questions/39509071/how-can-i-generate-test-result-csvfile-and-jtl-file-in-jmeter","children":"StackOverflow - How can I generate Test result (CSV) file and JTL file in jmeter?"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"https://stackoverflow.com/questions/17288545/jmeter-understanding-ramp-up","children":"StackOverflow - JMeter understanding ramp-up"}]}],"\n"]}]],null,["$","$Lf",null,{"children":"$L10"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","2kxBaS-bQTGXGXTLGAIxE",{"children":[["$","$L11",null,{"children":"$L12"}],["$","$L13",null,{"children":"$L14"}],null]}]]}],false]],"m":"$undefined","G":["$15","$undefined"],"s":false,"S":true}
14:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
12:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
10:null
