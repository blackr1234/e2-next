1:"$Sreact.fragment"
2:I[8287,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
3:I[3339,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
4:I[1367,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
5:I[5244,[],""]
6:I[3866,[],""]
7:I[4798,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
8:I[6121,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
9:I[3667,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],"default"]
a:I[8407,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
b:I[8173,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","8974","static/chunks/app/page-c8b940db14fac9a0.js"],""]
c:I[3197,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
d:I[7933,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
e:I[3800,["7829","static/chunks/7829-b7b9eb1dbe0d40e4.js","2153","static/chunks/2153-45fd9844831c6348.js","7177","static/chunks/app/layout-ea91c2d128ec48c2.js"],"default"]
10:I[6213,[],"OutletBoundary"]
12:I[6213,[],"MetadataBoundary"]
14:I[6213,[],"ViewportBoundary"]
16:I[4835,[],""]
:HL["/e2-next/_next/static/css/d3df112486f97f47.css","style"]
:HL["/e2-next/_next/static/css/c3624a693ae5a0c4.css","style"]
f:T601,/**
 * src/main/java/code/repo/SalesRepository.java
 */
@Repository
public interface SalesRepository extends JpaRepository<Sales, Long> {

    List<Sales> findAll();
}

/**
 * src/main/java/code/service/SalesService.java
 */
@Service
public class SalesService {

    @Autowired
    SalesRepository salesRepository;

    public BigDecimal calculateTotal() {
        return salesRepository.findAll()
                              .stream()
                              .map(Sales::getAmount)
                              .reduce(BigDecimal.ZERO, BigDecimal::add);
    }
}

/**
 * src/test/java/code/SalesServiceTest.java
 */
public class SalesServiceTest {

    @InjectMocks
    SalesService salesService;

    @Mock
    SalesRepository salesRepository;

    @Before
    public void setUp() {

        // Mockito 會將 @Mock 既值植入去 @InjectMocks 既 object 裡面

//        MockitoAnnotations.initMocks(this); // 舊式寫法
        MockitoAnnotations.openMocks(this).close(); // 新式寫法
    }

    @Test
    public void testSalesTotal() {

        final Sales sales1 = new Sales();
        sales1.setAmount(new BigDecimal("400"));

        final Sales sales2 = new Sales();
        sales2.setAmount(new BigDecimal("600"));

        Mockito.when(salesRepository.findAll()).thenReturn(Arrays.asList(sales1, sales2));

        final BigDecimal salesTotal = salesService.calculateTotal();

        Assert.assertEquals(new BigDecimal("1000"), salesTotal);
    }
}
0:{"P":null,"b":"wfZ4FdS4ntgGvzjeKJhfw","p":"/e2-next","c":["","blog","coding-java-5"],"i":false,"f":[[["",{"children":["blog",{"children":["(2020-09)",{"children":["coding-java-5",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/e2-next/_next/static/css/d3df112486f97f47.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/e2-next/_next/static/css/c3624a693ae5a0c4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"href":"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap","rel":"stylesheet"}],["$","link",null,{"rel":"stylesheet","href":"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css"}]]}],["$","body",null,{"children":["$","$L2",null,{"children":["$","$L3",null,{"gap":5,"children":[["$","$L3",null,{"gap":5,"className":"text-center","children":[["$","div",null,{"children":[["$","code",null,{"className":"SiteHeader_name__cwQmL","children":"Chung Cheuk Hang Michael"}],["$","code",null,{"className":"SiteHeader_title__CCfvI","children":"Java Web Developer"}]]}],["$","$L4",null,{}]]}],["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}],["$","hr",null,{}],["$","$L3",null,{"gap":3,"children":["$","$L7",null,{"className":"text-center","children":["$","$L8",null,{"xs":1,"sm":2,"md":3,"className":"justify-content-center g-3","children":[["$","$L9","0",{"children":["$","$La",null,{"as":"$b","href":"tel:+85263301333","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-phone","style":{"color":"#009688"}}]}],["$","$Le",null,{"className":"text-muted","children":["6330 1333"," "]}]]}]}]}],["$","$L9","1",{"children":["$","$La",null,{"as":"$b","href":"mailto:michaelboyboy@gmail.com","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-solid fa-envelope","style":{"color":"#f44336"}}]}],["$","$Le",null,{"className":"text-muted","children":["michaelboyboy@gmail.com"," "]}]]}]}]}],["$","$L9","2",{"children":["$","$La",null,{"as":"$b","href":"https://www.linkedin.com/in/mickchung","target":"_blank","rel":"external nofollow noopener noreferrer","className":"SiteFooter_contact-item__2JRRr","children":["$","$Lc",null,{"children":[["$","$Ld",null,{"children":["$","i",null,{"className":"fa-brands fa-linkedin","style":{"color":"#2196f3"}}]}],["$","$Le",null,{"className":"text-muted","children":["www.linkedin.com/in/mickchung"," "]}]]}]}]}]]}]}]}]]}]}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["(2020-09)",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2020-09)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["coding-java-5",["$","$1","c",{"children":[null,["$","$L5",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","(2020-09)","children","coding-java-5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[[["$","h1",null,{"children":"5 幾款超有用必學 3rd party libraries"}],"\n",["$","p",null,{"children":"今時今日以下幾款 3rd party libraries 已經被廣泛使用，亦係好成熟："}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"Library 名"}],["$","th",null,{"children":"用途"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"Lombok"}],["$","td",null,{"children":"可以生成 Java code，令我地寫少啲重複既 boilerplate code。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Apache Commons Lang"}],["$","td",null,{"children":"處理 string。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Apache Commons IO"}],["$","td",null,{"children":"處理檔案。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Google Guava"}],["$","td",null,{"children":"多功能，可以處理 string、collection、thread pool 等等。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Jackson Databind"}],["$","td",null,{"children":"Serialization / deserialization（object-to-string / string-to-object），喺 web programming 通常用黎處理 JSON 格式既 request body 或者 response body。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"JUnit"}],["$","td",null,{"children":"Unit testing 單元測試用。"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"Mockito"}],["$","td",null,{"children":"Unit testing 單元測試用（輔助）。"}]]}]]}]]}],"\n",["$","p",null,{"children":"仲有好幾隻 Apache libraries 都有特長，例如："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"要進行基本既文件操作，如寫入純文字檔、讀取純文字檔、遞歸列出目錄文件等等，可以用 Apache Commons IO"}],"\n",["$","li",null,{"children":"要處理 Base64 既 encoding 可以用 Apache Commons Codec"}],"\n",["$","li",null,{"children":"要發起 HTTP call 可以用 Apache HttpClient Fluent API"}],"\n"]}],"\n",["$","p",null,{"children":["註：",["$","code",null,{"children":"spring-boot-starter-parent"}]," 有對以上部分 libraries 提供 dependency 版本管理，\r\n所以某啲 dependency 寫左落 ",["$","code",null,{"children":"pom.xml"}]," 可以省卻 ",["$","code",null,{"children":"<version>"}]," tag。"]}],"\n",["$","p",null,{"children":"Spring 係 framework（較大）而唔算 library（較細小），佢直頭改變左成個 application 既寫法。"}],"\n",["$","h2",null,{"children":"5.1 Lombok"}],"\n",["$","p",null,{"children":"由於 Java VO/DTO/entity classes 既 getters、setters 太 boilerplate，而絕大多數情況下，佢地全部都由 IDE 根據 properties 黎 gen 出黎，\r\n根本自己寫黎多舊魚，亦對 version control 係多左一丁點負擔（要用肉眼對啲 code）。"}],"\n",["$","p",null,{"children":"所以就有左 Lombok 呢個 annotation-based 既 compile-time processor。佢會喺 compile time 階段 gen code。\r\nGen 左出黎既 bytecode，可以用 IDE 或者 decompiler 去睇下有冇 gen 錯 access modifiers、methods 既數量同名稱等等。"}],"\n",["$","p",null,{"children":"唔用 Lombok："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class Foo {\r\n    private String name;\r\n    private Date dateOfBirth;\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public Date getDateOfBirth() {\r\n        return dateOfBirth;\r\n    }\r\n\r\n    public void setDateOfBirth(Date dateOfBirth) {\r\n        this.dateOfBirth = dateOfBirth;\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":"用左 Lombok："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"@Getter\r\n@Setter\r\n@FieldDefaults(level = PRIVATE)\r\npublic class Foo {\r\n    String name;\r\n    Date dateOfBirth;\r\n}\n"}]}],"\n",["$","h3",null,{"children":"5.1.1 喺 Eclipse 使用 Lombok"}],"\n",["$","p",null,{"children":"想喺 Eclipse 用 Lombok annotations 而 compile 到無問題既話，必須額外安裝 Lombok plugin。"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["去 ",["$","a",null,{"href":"https://projectlombok.org/download","children":"Project Lombok"}]," 度下載 Lombok 既 plugin JAR file"]}],"\n",["$","li",null,{"children":"Double click 個 JAR，會顯示一個介面"}],"\n",["$","li",null,{"children":"揀返你個 Eclipse 既 directory"}],"\n",["$","li",null,{"children":"Restart Eclipse"}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"5.2 Jackson Databind"}],"\n",["$","p",null,{"children":"用黎將某個 class 既 object 轉成 string（默認為 JSON format），呢個過程叫 serialization；調返轉就係 deserialization。"}],"\n",["$","p",null,{"children":"Spring Boot 都有用 Jackson Databind 黎做 serialization 同 deserialization。"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"先係 deserialization，就係當我地用 POST HTTP API request 去訪問 Spring Boot 既 back-end 時，POST request body 係 JSON 格式，\r\n當 Spring Boot 收到既時候就會將個 JSON 轉成 Java objects，然後進入 controller"}],"\n",["$","li",null,{"children":"之後係 serialization，就係 Spring Boot 做完曬啲 business logic，controller 返回結果之後，\r\n會轉成 JSON 格式去作為 response body（不限於 POST request）"}],"\n"]}],"\n",["$","h3",null,{"children":"5.2.1 用 ObjectMapper 黎做 serialization"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class ObjectMapperSerializationExample {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        final Foo foo = new Foo(\"Michael\");\r\n        System.out.println(convertToString(foo)); // 出 {\"name\":\"Michael\"}\r\n    }\r\n\r\n    private static String convertToString(Foo foo) throws Exception {\r\n        return new ObjectMapper().writeValueAsString(foo);\r\n    }\r\n}\r\n\r\nclass Foo {\r\n    private String name;\r\n\r\n    public Foo(String name) {\r\n        setName(name);\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h3",null,{"children":"5.2.2 用 ObjectMapper 黎做 deserialization"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class ObjectMapperDeserializationExample {\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        final String json = \"{ \\\"name\\\": \\\"Michael\\\"}\";\r\n        System.out.println(convertToBar(json).getName()); // 出 Michael\r\n    }\r\n\r\n    private static Bar convertToBar(String barJson) throws Exception {\r\n        return new ObjectMapper().readValue(barJson, Bar.class);\r\n    }\r\n}\r\n\r\nclass Bar {\r\n    private String name;\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n}\n"}]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"5.3 Apache Commons Lang"}],"\n",["$","p",null,{"children":["呢個 library 提供左 JDK 非常缺乏既 string manipulation methods。用呢啲 methods 我地可以寫少好多 code。\r\n個 API 設計初衷係想消滅 ",["$","code",null,{"children":"NullPointerException"}],"，所以佢既一個好大既賣點就係接受 ",["$","code",null,{"children":"null"}]," arguments。\r\n亦因為係 static methods，佢地唔會好似 instance methods 咁，因為個 string variable ",["$","code",null,{"children":"null"}]," 左而當你一 call method 就 ",["$","code",null,{"children":"NullPointerException"}],"。"]}],"\n",["$","p",null,{"children":["JDK 既 ",["$","code",null,{"children":"str.toLowerCase()"}]," vs Commons Lang3 既 ",["$","code",null,{"children":"StringUtils.lowerCase(str)"}],"，\r\n前者有可能因為 ",["$","code",null,{"children":"str"}]," 係 ",["$","code",null,{"children":"null"}]," 而爆 ",["$","code",null,{"children":"NullPointerException"}],"；相反，後者容錯。"]}],"\n",["$","p",null,{"children":["要輕鬆處理 string 可以用 ",["$","code",null,{"children":"StringUtils"}],"，要處理數字可以用 ",["$","code",null,{"children":"NumberUtils"}],"。\r\n呢啲 utility classes 不需要 ",["$","code",null,{"children":"new"}],"，只需要直接 call 佢地既 static methods 就可以用。"]}],"\n",["$","p",null,{"children":["其中較有用既 ",["$","code",null,{"children":"StringUtils"}]," 有以下功能："]}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"Method"}],["$","th",null,{"children":"用途"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"trim(str)"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"str"}]," 既頭同尾空白字元刪走"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"strip(str)"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"str"}]," 既頭同尾空白字元刪走"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"stripToNull(str)"}]}],["$","td",null,{"children":["如果 ",["$","code",null,{"children":"str"}]," 係 ",["$","code",null,{"children":"null"}],"、empty 或 blank，返回 ",["$","code",null,{"children":"null"}]]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"leftPad(str, size, padStr)"}]}],["$","td",null,{"children":["喺 ",["$","code",null,{"children":"str"}]," 既頭部填充 ",["$","code",null,{"children":"padStr"}]," 直至 ",["$","code",null,{"children":"str"}]," 既長度達到 ",["$","code",null,{"children":"size"}]]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"rightPad(str, size, padStr)"}]}],["$","td",null,{"children":["喺 ",["$","code",null,{"children":"str"}]," 既尾部填充 ",["$","code",null,{"children":"padStr"}]," 直至 ",["$","code",null,{"children":"str"}]," 既長度達到 ",["$","code",null,{"children":"size"}]]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":[["$","code",null,{"children":"isEmpty(str)"}]," / ",["$","code",null,{"children":"isNotEmpty(str)"}]]}],["$","td",null,{"children":["check ",["$","code",null,{"children":"str"}]," 係 ",["$","code",null,{"children":"null"}]," 或 empty"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":[["$","code",null,{"children":"isBlank(str)"}]," / ",["$","code",null,{"children":"isNotBlank(str)"}]]}],["$","td",null,{"children":["check ",["$","code",null,{"children":"str"}]," 係 ",["$","code",null,{"children":"null"}]," 或 blank"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"isAnyEmpty(str1, str2, ...)"}]}],["$","td",null,{"children":["check 下有冇任何一個 string 係 ",["$","code",null,{"children":"null"}]," 或 empty"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"isAnyBlank(str1, str2, ...)"}]}],["$","td",null,{"children":["check 下有冇任何一個 string 係 ",["$","code",null,{"children":"null"}]," 或 blank"]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"defaultIfBlank(str, defaultValue)"}]}],["$","td",null,{"children":["如果 ",["$","code",null,{"children":"str"}]," 係 ",["$","code",null,{"children":"null"}]," 或 blank，返回 ",["$","code",null,{"children":"defaultValue"}]]}]]}],["$","tr",null,{"children":[["$","td",null,{"children":["$","code",null,{"children":"join(collection, separator)"}]}],["$","td",null,{"children":["將 ",["$","code",null,{"children":"collection"}]," 既 elements 串連起成一個 string，每個 element 之間用 ",["$","code",null,{"children":"separator"}]," 分隔"]}]]}]]}]]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"5.4 Google Guava"}],"\n",["$","p",null,{"children":["功能非常豐富，參考：",["$","a",null,{"href":"https://github.com/google/guava/wiki","children":"官方 GitHub"}]]}],"\n",["$","p",null,{"children":"有針對 collection data type 既 utility classes："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","code",null,{"children":"Lists"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"Sets"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"Maps"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"ImmutableList"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"ImmutableSet"}]}],"\n",["$","li",null,{"children":["$","code",null,{"children":"ImmutableMap"}]}],"\n"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"5.5 JUnit 4 或 5"}],"\n",["$","p",null,{"children":"JUnit 係最多人用既 Java unit testing library。"}],"\n",["$","p",null,{"children":"使用："}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["喺 ",["$","code",null,{"children":"src/test/java"}]," 度 create 一個 package，裡面再 create 一個 class"]}],"\n",["$","li",null,{"children":["加一個 ",["$","code",null,{"children":"public void test() {}"}]," 既 method，annotate with ",["$","code",null,{"children":"@Test"}]]}],"\n",["$","li",null,{"children":"Method body 打啲 production code，例如你 test 一個 utility class，就用佢既某個 method（你要 test 既果個 method）"}],"\n",["$","li",null,{"children":["之後 call ",["$","code",null,{"children":"Assert.assertEquals"}],"、",["$","code",null,{"children":"Assert.assertTrue"}],"、",["$","code",null,{"children":"Assert.assertFalse"}],"、",["$","code",null,{"children":"Assert.assertNull"}],"、\r\n",["$","code",null,{"children":"Assert.assertNotNull"}]," 黎 compare expected value（你預期既結果）同 actual value（你要 test 既果個 method 實際返回既結果）"]}],"\n"]}],"\n",["$","p",null,{"children":"例子："}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"public class ConfigUtilsTest {\r\n\r\n    @Test\r\n    public void testConfig() {\r\n        final Config config = ConfigUtils.getConfigData();\r\n        Assert.assertNotNull(config);\r\n        Assert.assertEquals(\"1.0.0\", config.getVersion());\r\n    }\r\n}\n"}]}],"\n",["$","p",null,{"children":"只需要喺 IDE 用 JUnit 4 或 5 黎運行呢個 class 就可以見到 JUnit 既 view。綠燈代表 pass；紅燈代表有 test fail 左。"}],"\n",["$","p",null,{"children":["如果係 Maven project 既話，當你行部分 Maven 既 commands，佢會默認咁同我地行 test，而 Maven 係根據 Java class 個名黎睇邊啲係 test class。\r\n所以我地命名所有 test classes 時，都要 ",["$","code",null,{"children":"Test"}]," 字尾。"]}],"\n",["$","hr",null,{}],"\n",["$","h2",null,{"children":"5.6 Mockito"}],"\n",["$","p",null,{"children":["幻想一個情境，我地寫左一個 service class，呢個 class 充滿 business logic，而啲 business logic 都係都係基於佢既 dependencies 所返回既結果。\r\n我地個 service class 同呢啲 dependencies 係（",["$","a",null,{"href":"https://en.wikipedia.org/wiki/Has-a","children":"has-a/composition 關係"}],"）。\r\n呢啲 dependencies 最後係會連接 DB 行 SQL 去拎 data，再返回畀個 service class 去通過一連串 business logic 運算而得出結果。"]}],"\n",["$","p",null,{"children":"我地想寫一個 unit test 去淨係 test 呢個 class 既 business logic，但如果要連接 DB 先行得到個 test 就變左係 integration test，壞處係時間會長。"}],"\n",["$","p",null,{"children":"為左簡化 dependencies 背後會做既野，我地就用直接假設呢啲 dependencies 會返回我地想佢地返回既結果，從而去單獨地測試呢個 service class。"}],"\n",["$","h3",null,{"children":"5.6.1 Mockito 例子"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-java","children":"$f"}]}]],null,["$","$L10",null,{"children":"$L11"}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","UZOcASeuA3Wq1CbtCQGRe",{"children":[["$","$L12",null,{"children":"$L13"}],["$","$L14",null,{"children":"$L15"}],null]}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
15:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
13:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Michael Chung's e-Portfolio"}],["$","meta","2",{"name":"description","content":"Powered by Next.js and React"}]]
11:null
